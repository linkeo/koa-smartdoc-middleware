const g = g || global;

g.serverPath = g.serverPath || location.pathname;
g.getAppSpec =
  g.getAppSpec ||
  (() => {
    return {
      type: 'application',
      title: '',
      name: 'xxd-backend',
      description: 'RESTful API service for xuanxiaodi.com web+app',
      notes: [],
      address: '',
      author: 'linkang <linkang@innobuddy.com>',
      contact: '',
      version: '2.51.0',
      modules: [
        {
          name: 'example-module-1',
          description:
            '```js\nconsole.log(\'Hello world!\');\n```\n\n```cpp\nvoid main() {\n  std::cout << "Hello world!" << std::eol;\n}\n```\n\n```go\nimport "fmt"\n\nfunc main() {\n  fmt.Println("Hello world!")\n}\n```',
          actions: [
            {
              name: 'example-action-1',
              route: {
                method: 'get',
                path: '/example/1',
              },
              params: [
                { type: 'string', name: 'a' },
                { type: 'string', name: 'b' },
              ],
            },
            {
              name: 'example-action-2',
              route: {
                method: 'post',
                path: '/example/:a',
              },
              params: [
                { type: 'string', name: 'a' },
                { type: 'string', name: 'b' },
              ],
            },
            {
              name: 'example-action-3',
              route: {
                method: 'post',
                path: '/example/3',
              },
              params: [
                { type: 'string', name: 'a' },
                { type: 'string', name: 'b' },
                { type: 'Upload', name: 'f' },
              ],
            },
            {
              name: 'example-action-4',
              route: {
                method: 'get',
                path: '/example/4',
              },
              params: [],
            },
            {
              name: 'example-action-5',
              route: {
                method: 'get',
                path: '/example/5',
              },
              params: [],
            },
          ],
        },
        {
          name: 'example-module-2',
          description:
            '```js\nconsole.log(\'Hello world!\');\n```\n\n```cpp\nvoid main() {\n  std::cout << "Hello world!" << std::eol;\n}\n```\n\n```go\nimport "fmt"\n\nfunc main() {\n  fmt.Println("Hello world!")\n}\n```',
          actions: [
            {
              name: 'example-action-1',
              route: {
                method: 'get',
                path: '/example/1',
              },
              params: [],
            },
            {
              name: 'example-action-2',
              route: {
                method: 'get',
                path: '/example/2',
              },
              params: [],
            },
            {
              name: 'example-action-3',
              route: {
                method: 'get',
                path: '/example/3',
              },
              params: [],
            },
            {
              name: 'example-action-4',
              route: {
                method: 'get',
                path: '/example/4',
              },
              params: [],
            },
            {
              name: 'example-action-5',
              route: {
                method: 'get',
                path: '/example/5',
              },
              params: [],
            },
          ],
        },
        {
          name: 'example-module-3',
          description:
            '```js\nconsole.log(\'Hello world!\');\n```\n\n```cpp\nvoid main() {\n  std::cout << "Hello world!" << std::eol;\n}\n```\n\n```go\nimport "fmt"\n\nfunc main() {\n  fmt.Println("Hello world!")\n}\n```',
          actions: [],
        },
        {
          name: 'example-module-4',
          description:
            '```js\nconsole.log(\'Hello world!\');\n```\n\n```cpp\nvoid main() {\n  std::cout << "Hello world!" << std::eol;\n}\n```\n\n```go\nimport "fmt"\n\nfunc main() {\n  fmt.Println("Hello world!")\n}\n```',
          actions: [],
        },
        {
          name: 'example-module-5',
          description:
            '```js\nconsole.log(\'Hello world!\');\n```\n\n```cpp\nvoid main() {\n  std::cout << "Hello world!" << std::eol;\n}\n```\n\n```go\nimport "fmt"\n\nfunc main() {\n  fmt.Println("Hello world!")\n}\n```',
          actions: [],
        },
        {
          name: 'example-module-6',
          description:
            '```js\nconsole.log(\'Hello world!\');\n```\n\n```cpp\nvoid main() {\n  std::cout << "Hello world!" << std::eol;\n}\n```\n\n```go\nimport "fmt"\n\nfunc main() {\n  fmt.Println("Hello world!")\n}\n```',
          actions: [],
        },
        {
          name: 'example-module-7',
          description:
            '```js\nconsole.log(\'Hello world!\');\n```\n\n```cpp\nvoid main() {\n  std::cout << "Hello world!" << std::eol;\n}\n```\n\n```go\nimport "fmt"\n\nfunc main() {\n  fmt.Println("Hello world!")\n}\n```',
          actions: [],
        },
        {
          name: 'example-module-8',
          description:
            '```js\nconsole.log(\'Hello world!\');\n```\n\n```cpp\nvoid main() {\n  std::cout << "Hello world!" << std::eol;\n}\n```\n\n```go\nimport "fmt"\n\nfunc main() {\n  fmt.Println("Hello world!")\n}\n```',
          actions: [],
        },
        {
          name: 'example-module-9',
          description:
            '```js\nconsole.log(\'Hello world!\');\n```\n\n```cpp\nvoid main() {\n  std::cout << "Hello world!" << std::eol;\n}\n```\n\n```go\nimport "fmt"\n\nfunc main() {\n  fmt.Println("Hello world!")\n}\n```',
          actions: [],
        },
        {
          name: 'example-module-10',
          description:
            '```js\nconsole.log(\'Hello world!\');\n```\n\n```cpp\nvoid main() {\n  std::cout << "Hello world!" << std::eol;\n}\n```\n\n```go\nimport "fmt"\n\nfunc main() {\n  fmt.Println("Hello world!")\n}\n```',
          actions: [],
        },
        {
          name: 'example-module-11',
          description:
            '```js\nconsole.log(\'Hello world!\');\n```\n\n```cpp\nvoid main() {\n  std::cout << "Hello world!" << std::eol;\n}\n```\n\n```go\nimport "fmt"\n\nfunc main() {\n  fmt.Println("Hello world!")\n}\n```',
          actions: [],
        },
        {
          name: 'example-module-12',
          description:
            '```js\nconsole.log(\'Hello world!\');\n```\n\n```cpp\nvoid main() {\n  std::cout << "Hello world!" << std::eol;\n}\n```\n\n```go\nimport "fmt"\n\nfunc main() {\n  fmt.Println("Hello world!")\n}\n```',
          actions: [],
        },
        {
          name: 'example-module-13',
          description:
            '```js\nconsole.log(\'Hello world!\');\n```\n\n```cpp\nvoid main() {\n  std::cout << "Hello world!" << std::eol;\n}\n```\n\n```go\nimport "fmt"\n\nfunc main() {\n  fmt.Println("Hello world!")\n}\n```',
          actions: [],
        },
      ],
      docs: [
        {
          prefix: '',
          list: [
            {
              link: '/articles/coop_api.md',
              title: '选校帝对外合作接口文档',
              content: [
                '测试地址：http://api.staging.xuanxiaodi.com/coop',
                '线上地址：https://api.xuanxiaodi.com/coop',
              ],
              markdown:
                '# 选校帝对外合作接口文档\n\n测试地址：http://api.staging.xuanxiaodi.com/coop\n\n线上地址：https://api.xuanxiaodi.com/coop\n\n## 文档版本\n\n当前版本：v1.3.0\n\n| 版本号 | 编辑人 | 编辑内容                                                                                               |\n| ------ | ------ | ------------------------------------------------------------------------------------------------------ |\n| v0.0.1 | 林康   | 增加了页面跳转、排行榜、咨询相关接口                                                                   |\n| v0.0.2 | 林康   | 增加了活动库相关接口、错误码列表                                                                       |\n| v0.0.3 | 林康   | 修改排行榜学校列表接口 URL 错误，及排行榜大全接口返回的数据结构                                        |\n| v1.0.0 | 林康   | 正式发布文档（无内容变化）                                                                             |\n| v1.0.1 | 林康   | 修改排行榜大全接口（统一字段），修改活动库项目接口（增加字段）                                         |\n| v1.0.2 | 林康   | 排行榜大学学校列表增加关于学校 LOGO 的描述                                                             |\n| v1.1.0 | 林康   | 新增大学数据、高中数据相关接口                                                                         |\n| v1.2.0 | 林康   | 调整跳转接口（默认不重定向）；<br>增加排名机构介绍接口，学校专业相关接口；<br>活动详情接口增加教师信息 |\n| v1.3.0 | 林康   | 新增活动预约接口                                                                                       |\n\n> 版本号说明：\n>\n> - 版本号遵循语义化版本规范，由 Major (A), Minor (B), Patch (C) 三部分组成。\n> - A=0 的版本为预览版，文档已有内容极可能会变化，仅供参考。\n> - A>0 时，仅修改已有内容的问题增加 C，添加新的内容则增加 B，增加了和之前文档不兼容的内容增加 A。\n\n## 目录\n\n[TOC]\n\n## 1、页面跳转相关接口\n\n跳转相关接口均需要单独配置对应跳转功能的 pid 才能开启，否则无法进行跳转。\n\n### 1.1、跳转到大学学校页面\n\n地址：GET /h5/school\n\n参数：\n\n- **schoolId**: _integer_ 学校的 ID\n- **redirect**: _boolean_ 是否响应为 302 重定向\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "url": "https://..." //跳转地址\n  }\n}\n```\n\n### 1.2、跳转到高中学校页面\n\n地址：GET /h5/highschool\n\n参数：\n\n- **highschoolId**: _integer_ 高中的 ID\n- **redirect**: _boolean_ 是否响应为 302 重定向\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "url": "https://..." //跳转地址\n  }\n}\n```\n\n### 1.3、跳转到录取率测试工具\n\n地址：GET /h5/tool/admission_rate\n\n参数：\n\n- **redirect**: _boolean_ 是否响应为 302 重定向\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "url": "https://..." //跳转地址\n  }\n}\n```\n\n### 1.4、跳转到智能选校工具\n\n地址：GET /h5/tool/match_school\n\n参数：\n\n- **redirect**: _boolean_ 是否响应为 302 重定向\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "url": "https://..." //跳转地址\n  }\n}\n```\n\n## 2、大学排名相关接口\n\n### 2.1、排行榜大全接口\n\n地址：GET /data/rankings\n\n参数：\n\n- 无\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": [\n    {\n      "groupId": 1,\n      "groupName": "院校排名", // 有：院校排名、专业排名\n      "lists": [\n        {\n          "listId": 1,\n          "listName": "世界大学", // 院校排名下有：世界大学、各国大学、北美高中\n          // 专业排名下有：世界专业、美国专业\n          "schoolType": "school", // 有 school 和 highschool 两种，对应的后续不同的接口\n          "rankings": [\n            {\n              // 排行榜对象\n              "id": 1, // 排行榜ID，用于排行榜学校列表\n              "title": "世界大学排名", // 榜单名称\n              "type": "USNEWS", // 排名机构\n              "year": 2019, // year + type + title 可以组成完整排行榜名称\n              "isWorldRank": true, // 是否世界排名\n              "isMajorRank": false, // 是否专业排名\n              "majorDirection": 1, // 仅专业排名有这一项，用于区分不同方向的专业排名\n              "schoolType": "school" // 有 school 和 highschool 两种，对应的后续不同的接口（和外层的一样）\n            }\n          ],\n          "majorDirections": [\n            // 仅专业排名有这一项，对应上面的majorDirection，用于分类展示排行榜\n            {\n              "id": 1,\n              "name": "商科"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n```\n\n### 2.2、大学排行榜学校列表接口\n\n地址：GET /data/rankings/schools\n\n参数：\n\n- **rankingId**: _integer_ 排行榜的 ID\n- **page**: _integer_ 分页页码（从 1 开始）\n- **pageSize**: _integer_ 分页尺寸（默认 20，最大 100）\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "meta": {\n      "category": {\n        // 排行榜对象\n        "id": 1, // 排行榜ID\n        "title": "世界大学排名", // 榜单名称\n        "type": "USNEWS", // 机构名\n        "year": 2019, // year + type + title 可以组成完整排行榜名称\n        "isWorldRank": true, // 是否世界排名\n        "isMajorRank": false, // 是否专业排名\n        "info": {\n          // 机构介绍信息，如果没有介绍信息，则无此字段\n          "id": 1, // 自增的ID\n          "key": "USNEWS", // 与排行榜列表中的机构字段对应\n          "name": "USNEWS", // 完整介绍名称\n          "logo": "https://...", // 机构LOGO\n          "introduction": "《USNEWS..." // 机构介绍\n        }\n      }\n    },\n    "pagination": {\n      "page": 1, // 当前页码\n      "pageSize": 20, // 当前尺寸\n      "count": 1000 // 分页数据总数\n    },\n    "data": [\n      {\n        "id": 1, // 递增ID，没有意义\n        "schoolId": 4, // 学校ID\n        "logo": "https://...", // 学校LOGO\n        "chineseName": "", // 学校中文名\n        "englishName": "", // 学校英文名\n        "rank": "1", // 排名字符串\n        "rankValue": 1, // 排名值（排名为范围时取最高值）\n        "countryName": "", // 国家\n        "provinceName": "", // 省份\n        "cityName": "" // 城市\n      }\n      // ...\n    ]\n  }\n}\n```\n\n### 2.3、高中排行榜学校列表接口\n\n地址：GET /data/rankings/highschools\n\n参数：\n\n- **rankingId**: _integer_ 排行榜的 ID\n- **page**: _integer_ 分页页码（从 1 开始）\n- **pageSize**: _integer_ 分页尺寸（默认 20，最大 100）\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "meta": {\n      "categoryId": 1, // 排行榜ID\n      "title": "世界大学排名", // 榜单名称\n      "org": "USNEWS", // 机构名\n      "year": 2019 // year + org + title 可以组成完整排行榜名称\n    },\n    "pagination": {\n      "page": 1, // 当前页码\n      "pageSize": 20, // 当前尺寸\n      "count": 1000 // 分页数据总数\n    },\n    "data": [\n      {\n        "id": 1, // 递增ID，没有意义\n        "highschoolId": 4, // 高中ID\n        // 高中学校没有LOGO\n        "chineseName": "", // 高中中文名\n        "englishName": "", // 高中英文名\n        "rank": "1", // 排名字符串\n        "rankValue": 1, // 排名值（排名为范围时取最高值）\n        "countryName": "", // 国家\n        "provinceName": "", // 省份\n        "cityName": "" // 城市\n      }\n      // ...\n    ]\n  }\n}\n```\n\n### 2.4、排名机构介绍接口\n\n该接口用于获取排名机构的介绍信息。\n\n地址：GET /data/rankings/info\n\n参数：\n\n- 无\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": [\n    {\n      "id": 1, // 自增的ID\n      "key": "泰晤士", // 与排行榜列表中的机构字段对应\n      "name": "泰晤士高等教育（THE）", // 完整介绍名称\n      "logo": "https://...", // 机构LOGO\n      "introduction": "《泰晤士高等教..." // 机构介绍\n    }\n  ]\n}\n```\n\n## 3、资讯相关接口\n\n### 3.1、资讯列表数据\n\n获取资讯列表（分页）\n\n地址：GET /data/news/list\n\n参数：\n\n- **categoryId**: _string_ 资讯的分类，接口 3.3 中可以获取到（路径为 `data.categories`，具有两层结构）\n- **regionId**: _string_ 资讯相关地区 ID，接口 3.3 中可以获取到（路径为 `data.regions`，单层接口）\n- **page**: _integer_ 分页页码（从 1 开始）\n- **pageSize**: _integer_ 分页尺寸（默认 20，最大 100）\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "pagination": {\n      "page": 1, // 当前页码\n      "pageSize": 20, // 当前尺寸\n      "count": 1000 // 分页数据总数\n    },\n    "data": [\n      {\n        "id": 1, // 资讯ID\n        "title": "", // 资讯标题\n        "coverUrl": "", // 资讯封面图\n        "publishTime": "", // 发布时间（ISO-8601）\n        "publishDate": "", // 发布日期（YYYY-MM-DD）\n        "preview": "", // 资讯内容提要（纯文本）\n        "categoryGroupName": "", // 一级分类名\n        "categoryName": "" // 二级分类名\n      }\n      // ...\n    ]\n  }\n}\n```\n\n### 3.2、资讯详情数据\n\n地址：GET /data/news/item\n\n参数：\n\n- **newsId**: _integer_ 资讯 ID\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "id": 1, // 资讯ID\n    "title": "", // 资讯标题\n    "coverUrl": "", // 资讯封面图\n    "content": "", // 资讯内容（HTML）\n    "publishTime": "", // 发布时间（ISO-8601）\n    "publishDate": "", // 发布日期（YYYY-MM-DD）\n    "regionName": "", // 相关国家名\n    "categoryGroupName": "", // 一级分类名\n    "categoryName": "" // 二级分类名\n  }\n}\n```\n\n### 3.3、资讯列表筛选项数据\n\n获取用于资讯列表参数的筛选项数据，筛选项为 `{ id, name }` 结构的数据，`name` 用于展示，`id` 用于参数传递。\n\n地址：GET /data/news/list/filters\n\n参数：\n\n- 无\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "categories": [\n      {\n        "group": "GROUP_1",\n        "groupName": "分类1",\n        "options": [\n          {\n            "id": "OPTION_1",\n            "name": "分类1选项1"\n          }\n        ]\n      }\n    ],\n    "regions": [\n      {\n        "id": "REGION_1",\n        "name": "地区1"\n      }\n    ]\n  }\n}\n```\n\n## 4、活动库相关接口\n\n### 4.1、活动库列表数据\n\n地址：GET /data/activities/list\n\n参数：\n\n- **adeptGrade**: _integer_ 按当前年级筛选活动，数据见接口 4.3\n- **adeptMajor**: _integer_ 按专业方向筛选活动\n- **adeptType**: _integer_ 按类型筛选活动\n- **adeptMonth**: _integer_ 按时间筛选活动\n- **page**: _integer_ 分页页码（从 1 开始）\n- **pageSize**: _integer_ 分页尺寸（默认 20，最大 100）\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "pagination": {\n      "page": 1, // 当前页码\n      "pageSize": 20, // 当前尺寸\n      "count": 1000 // 分页数据总数\n    },\n    "data": [\n      {\n        "id": 470, // 活动项目ID\n        "name": "马尔可夫决策过程（MDP）", // 活动名称\n        "activityTime": "滚动", // 活动时间（和筛选项不同，这是更详细的描述）\n        "place": "南京" // 活动地点\n      }\n    ]\n  }\n}\n```\n\n### 4.2、活动库项目数据\n\n注：活动预约资讯需要 `appointEnabled` 字段为 `true` 才可以进行预约资讯（不管是通过 `appointUrl` 跳转到预约页面，还是通过接口提交预约）\n\n地址：GET /data/activities/item\n\n参数：\n\n- **activityId**: _integer_ 活动项目 ID\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "id": 470, // 活动项目ID\n    "name": "马尔可夫决策过程（MDP）", // 活动名称\n    "activityTime": "滚动", // 活动时间（和筛选项不同，这是更详细的描述）\n    "place": "南京", // 活动地点\n    "major": "理工科", // 活动适合专业\n    "introduction": "当今，社会信息化，特别是大数据、人工智能迅猛发展，作为其实现技术的程序设计变得越来越重要。程序设计课程体系也已经不仅仅是大学计算机专业的必修课程，而是逐渐成为一种时代的基本素颜。然而，在目前国内外程序设计课程体系的教材和教学侧重于理论教学，缺乏编程解决问题能力的实践训练。为此，本课程系统、全面磨炼编程解决问题的能力为目的，基于程序设计的知识体系（程序设计语言、数据结构、算法、数学），以案例教学的方法，教授知识点及相关试题，并让学生编程解决问题。", // 活动描述\n    "expectedOutcome": "课题科研报告&学术论文发表、纸质推荐信、教授网络推荐信、官方项目结业证书", // 项目预期成果\n    "note": "清北等985/211院校博士导师1对1线上指导。", // 备注\n    "appointEnabled": true, // 是否可预约\n    "appointUrl": "https://xxxxxx", // 预约链接，需要配置预约功能的pid才能获取到\n    "consultant": {\n      // 活动提供者（导师账号）\n      // 有些活动没有提供者，则没有此对象\n      "id": 1, // 提供者 ID，用于在预约接口（暂无）中指定预约导师\n      "name": "张三", // 提供者姓名\n      "avatar": "https://..." // 提供者头像\n    }\n  }\n}\n```\n\n### 4.3、活动库列表筛选项数据\n\n地址：GET /data/activities/list/filters\n\n参数：\n\n- 无\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "adeptGrade": [\n      {\n        "id": 1, // 选项ID，用于接口中\n        "name": "初中", // 选项名称，用于展示\n        "isDefault": false // 是否默认选项\n      }\n    ],\n    "adeptMajor": [\n      {\n        "id": 1, // 选项ID，用于接口中\n        "name": "工科", // 选项名称，用于展示\n        "isDefault": false // 是否默认选项\n      }\n    ],\n    "adeptType": [\n      {\n        "id": 1, // 选项ID，用于接口中\n        "name": "实习实训", // 选项名称，用于展示\n        "isDefault": false // 是否默认选项\n      }\n    ],\n    "adeptMonth": [\n      {\n        "id": 1, // 选项ID，用于接口中\n        "name": "1月", // 选项名称，用于展示\n        "isDefault": false // 是否默认选项\n      }\n    ]\n  }\n}\n```\n\n### 4.4、活动预约接口\n\n注：接入方需要保证填写的手机号是有效的。\n\n地址：POST /action/activities/appoint\n\n参数：\n\n- **activityId**: _number_ 活动 ID（必须是可预约的活动）\n- **contactName**: _string_ 预约人姓名（必填）\n- **contactPhone**: _string_ 预约人手机号（必填）\n- **cityName**: _string_ 预约人所在城市（非必填，默认值为 `"未知"`）\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "success": true\n  }\n}\n```\n\n## 5、大学相关接口\n\n### 5.1、大学列表数据\n\n地址：GET /data/school/list\n\n参数：\n\n- **country**: _string_ 按国家筛选（取值见接口 5.2）\n- **ranking**: _string_ 按国内排名筛选（取值见接口 5.2）\n- **toefl**: _string_ 按托福要求筛选（取值见接口 5.2）\n- **ielts**: _string_ 按雅思要求筛选（取值见接口 5.2）\n- **fee**: _string_ 按每年费用筛选（取值见接口 5.2）\n- **page**: _integer_ 分页页码（从 1 开始）\n- **pageSize**: _integer_ 分页尺寸（默认 20，最大 100）\n\n```json\n{\n  "code": 0,\n  "data": {\n    "pagination": {\n      "page": 1, // 当前页码\n      "pageSize": 20, // 当前尺寸\n      "count": 1000 // 分页数据总数\n    },\n    "data": [\n      {\n        "id": 7, // 学校ID\n        "chineseName": "多伦多大学", // 学校中文名\n        "englishName": "University of Toronto", // 学校英文名\n        "logo": "https://...", // 学校LOGO\n        "coverPicture": "https://...", // 背景图片\n        "establishmentYear": 1827, // 建校年份\n        "feeTotal": "43,180美元", // 学费\n        "scoreToefl": "100", // 托福要求\n        "scoreIelts": "6.5", // 雅思要求\n        "scoreSat": null, // SAT要求\n        "gpa": null, // GPA要求\n        "scoreGreGrad": null, // 研究生GRE要求\n        "scoreGmatGrad": null, // 研究生GMAT要求\n        "scoreAct": null, // ACT要求\n        "countryName": "加拿大", // 国家\n        "provinceName": "加拿大", // 州省\n        "cityName": "多伦多", // 城市\n        "cityPath": "加拿大-多伦多", // 国家-州省-城市\n        "typeName": "公立", // 学校性质\n        "TIE_ADMINSSION_RATE": "10.0%", // 录取率\n        "worldRankings": [\n          // 世界排名\n          {\n            "id": 1271, // 榜单ID\n            "type": "QS", // 排名机构\n            "year": 2020, // 榜单年份\n            "title": "世界大学排名", // 榜单名称\n            "rank": 29 // 学校的排名\n          }\n          // ...\n        ],\n        "localRankings": [\n          // 国内排名\n          {\n            "id": 1294,\n            "type": "USNEWS",\n            "year": 2019,\n            "title": "加拿大大学排名",\n            "rank": 1\n          }\n          // ...\n        ]\n      }\n      // ...\n    ]\n  }\n}\n```\n\n### 5.2、大学列表筛选项数据\n\n地址：GET /data/school/list/filters\n\n参数：\n\n- 无\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "countries": [\n      // 国家筛选项，id用于接口参数，name用于展示\n      { "id": "", "name": "全球" },\n      { "id": "226", "name": "美国" }\n      // ...\n    ],\n    "rankings": [\n      // 国内排名筛选项，id用于接口参数，name用于展示\n      { "id": "", "name": "不限" },\n      { "id": "1,10", "name": "1-10名" }\n      // ...\n    ],\n    "toefl": [\n      // 托福要求筛选项，id用于接口参数，name用于展示\n      { "id": "", "name": "不限" },\n      { "id": "null", "name": "不要求" },\n      { "id": ",80", "name": "80分以下" }\n      // ...\n    ],\n    "ielts": [\n      // 雅思要求筛选项，id用于接口参数，name用于展示\n      { "id": "", "name": "不限" },\n      { "id": "null", "name": "不要求" },\n      { "id": ",5.4999", "name": "5.5分以下" }\n      // ...\n    ],\n    "fees": [\n      // 每年费用筛选项，id用于接口参数，name用于展示\n      { "id": "", "name": "不限" },\n      { "id": ",19999", "name": "2万美元以下" }\n      // ...\n    ]\n  }\n}\n```\n\n### 5.3、大学详情数据\n\n地址：GET /data/school/item\n\n参数：\n\n- **schoolId**: _integer_ 大学 ID\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "id": 4,\n    "chineseName": "哈佛大学", // 学校中文名\n    "englishName": "Harvard University", // 学校英文名\n    "logo": "https://...", // 学校LOGO\n    "motto": "Veritas (Truth)", // 校训\n    "establishmentYear": 1636, // 建校年份\n    "area": "总面积20.6Km2，市区", // 占地面积\n    "group": "常春藤盟校、美国大学协会（AAU）", // 学校所属集团\n    "website": "http://www.harvard.edu/", // 学校官网\n    "textIntroduction": "哈佛大学（Harvard University）成立于1636年。。。", // 文字简介\n    "address": "Massachusetts Hall, Cambridge, Massachusetts 02138", // 学校地址\n    "coverPicture": "https://...", // 页面头部底图\n    "hotMajors": [\n      // 热门专业\n      "广告学",\n      "物理科学",\n      "生物科学"\n    ],\n    "features": [\n      // 学校特色\n      {\n        "keyword": "世界顶尖大学",\n        "description": "哈佛大学是全美第一所大学，同时是。。。"\n      },\n      {\n        "keyword": "世界顶尖教学水平",\n        "description": "哈佛大学的所有本科专业教育水平都。。。"\n      }\n      // ...\n    ],\n    "nativeName": null, // 本国名（比如日本院校的日文名）\n    "worldRankings": [\n      // 排名信息（世界排名）\n      {\n        "id": 1271, // 榜单ID\n        "type": "QS", // 排名机构\n        "year": 2020, // 榜单年份\n        "title": "世界大学排名", // 榜单名称\n        "rank": 3 // 学校的排名\n      },\n      {\n        "id": 1222,\n        "type": "USNEWS",\n        "year": 2019,\n        "title": "世界大学排名",\n        "rank": 1\n      }\n      // ...\n    ],\n    "localRankings": [\n      // 排名信息（本国排名）\n      {\n        "id": 1298, // 和上面一样\n        "type": "USNEWS",\n        "year": 2020,\n        "title": "美国综合性大学排名",\n        "rank": 2\n      },\n      {\n        "id": 1218,\n        "type": "泰晤士",\n        "year": 2019,\n        "title": "美国大学排名",\n        "rank": 1\n      }\n      // ...\n    ],\n    "extraInfo": {\n      // 这里面的都是描述性的文本信息\n      "TIE_LOCATION": "它的总部。。。", // 地理位置\n      "TIE_HISTORY": "15世纪末，由。。。", // 学校历史\n      "TIE_FEATURE": "截止2014年，哈。。。", // 学校特色\n      "TIE_LIBRARY": "哈佛大学图书馆。。。", // 图书馆介绍\n      "TIE_INSTALLATION": "哈佛大学校。。。", // 校园设施\n      "TIE_ACCOMMODATION": "哈佛的住。。。", // 学校住宿\n      "TIE_DEPARTMENT_MAJOR": "截至2014年。。。", // 院系设置介绍\n      "TIE_TEACHING": "哈佛采用半。。。", // 教学特色\n      "TIE_CAMPUS": "哈佛大学占地85公顷的。。。", // 校园环境\n      "TIE_ADMINSSION_RATE": "5%", // 学校录取率（一般指本科）\n      "TIE_APPLICATION_STUDENT_AMOUNT": "", // 申请学生人数\n      "TIE_ADMISSIONS_OFFICE": "本科招办联系方。。。", // 招生办信息\n      "TIE_STUDENT_AMOUNT": "21,966", // 学生人数\n      "TIE_UNDERGRADUATE_AMOUNT": "7,029", // 本科生人数\n      "TIE_GRADUATE_AMOUNT": "14,937", // 研究生人数\n      "TIE_INTERNATIONAL_STUDENT_RATIO": "21.4%", // 国际学生比\n      "TIE_FACULTY_STUDENT_RATIO": "1:7", // 师生比\n      "TIE_GRADUATION_RATE": "86%", // 毕业率\n      "TIE_EMPLOYMENT_RATE": "91.1%", // 就业率\n      "TIE_EMPLOYMENT_PAY": "毕业起薪：$。。。", // 就业薪资\n      "TIE_BOY_GIRL_RATIO": "53:47" // 男女比例\n    },\n    "evaluationBad": [\n      // 学校差评项\n      "People often focus too much on future careers and making money, and sometimes lose track of enjoying the present.",\n      "Professors are brilliant, but tracking them down for a one-on-one conversation requires a degree of patience."\n      // ...\n    ],\n    "evaluationGood": [\n      // 学校好评项\n      "Access to the best professors and minds of our time",\n      "The student motivation and ambition on campus is contagious."\n      // ...\n    ],\n    "strongMajors": [\n      // 强势专业\n      "商学院",\n      "法学院",\n      "教育学院",\n      "生物医学领域专业"\n    ],\n    "aceFields": [\n      // 王牌领域（和强势专业类似，不一定指专业）\n      "商业",\n      "法律",\n      "生物医学领域"\n    ],\n    "selectionReason": [\n      // 择校理由\n      "哈佛大学(Harvard University)，美国大学教育的旗舰，常青藤联盟的代表。",\n      "哈佛大学商学院是这个星球上最好的商学院，没有其他。",\n      "哈佛大学的所有本科学科教育水平都是世界顶级的。",\n      "哈佛大学图书馆是世界上最大的大学图书馆。"\n    ],\n    "videos": [\n      // 相关视频\n      {\n        "id": 4, // 视频ID\n        "name": "小俊好帅", // 视频标题\n        "coverUrl": "https://...", // 视频封面\n        "videoDuration": 43023, // 视频时长（秒）\n        "watchCount": 2212, // 观看次数\n        "likeCount": 0 // 点赞次数\n      }\n      // ...\n    ],\n    "countryName": "美国", // 国家\n    "provinceName": "马萨诸塞", // 州省\n    "cityName": "波士顿", // 城市\n    "typeName": "私立", // 学校性质\n    "cityPath": "美国-马萨诸塞-波士顿", // 国家-州省-城市（其中会省略重复或者缺失的部分）\n    "photos": [\n      // 学校图片\n      "https://...",\n      "https://...",\n      "https://...",\n      "https://..."\n    ],\n    "coverBottomColor": "#2C2C13", // 头部区域底色（一般与头部底图配合使用）\n    "application": {\n      // 申请信息\n      "undergraduate": {\n        // 本科申请信息\n        "adminssionRate": "5%", // 录取率\n        "applicationStudentAmount": "42,749", // 申请人数\n        "introduction": "", // 申请简介\n        "material": "申请表：在线填写。。。", // 申请材料\n        "scoreToefl": "接受，暂无最低分数要求", // 托福成绩要求\n        "scoreIelts": "6.5", // 雅思成绩要求\n        "scoreSat": "总分：1420-1560，阅。。。", // SAT分数要求（本科）\n        "scoreGre": "...", // GRE分数要求（研究生）\n        "scoreGmat": "...", // GMAT分数要求（研究生）\n        "gpa": 3.8, // GPA要求\n        "feeApplication": "75美元", // 申请费\n        "feeTuition": "US$51,925", // 学费\n        "feeAccommodation": "US$17,682", // 住宿费\n        "feeBook": "US$1,200", // 书本费\n        "feeLife": "US$2,993", // 生活费\n        "scholarship": "哈佛大学奖学金十。。。", // 奖学金描述\n        "timeApplicationDeadline": "1月1日（EA：11月1日 RD：1月1日）", // 申请截止时间\n        "timeOffer": "4月1日", // Offer发放时间\n        "timeOfferDeadline": "5月1日", // Offer发放截止时间\n        "semester": "秋季", // 申请学期\n        "adminssionElements": "...", // 申请要点（描述）\n        "scoreSat2": "650-800", // SAT2成绩要求（本科）\n        "scoreAct": "32-35", // ACT要求（本科）\n        "feeTotal": "US$73,800", // 总费用（参考值）\n        "flow": "1. 参加标准化的入学考。。。", // 申请流程\n        "requireInterview": false, // 是否需要面试\n        "feeOthers": "...", // 其他费用\n        "scoreNative": "...", // 本地语言考试成绩要求\n        "scoreOthers": "..." // 其他分数要求\n      },\n      "graduate": {\n        // 研究生申请信息\n        // 同本科申请\n      },\n      "arts": {\n        // 艺术申请信息\n        "admissionRate": 0.06, // 录取率\n        "strongMajors": "景观设计", // 强势艺术专业\n        "undergraduateMajors": "艺术史，。。。", // 本科艺术专业\n        "graduateMajors": "建筑，景观建筑，。。。", // 研究生艺术专业\n        "textIntroduction": "哈佛大学。。。", // 艺术申请简介\n        "alumni": "胡复刚\\n物理学家、教育家。。。", // 校友介绍\n        "locationInfo": "位置\\n哈佛大学位于波士顿，。。。", // 地理位置\n        "feeTuition": "47,047美元", // 学费\n        "feeLife": null, // 生活费\n        "feeAccommodation": "15,951美元", // 住宿费\n        "feeBook": "2,000美元", // 书本费\n        "feeTraffic": "950美元", // 交通费\n        "feeOther": "1,875美元", // 其他费用\n        "feeTotal": "67,823美元", // 总费用（参考值）\n        "averageScholarship": "46409", // 平均奖学金\n        "applicationExperience": "哈佛是全世。。。", // 申请经验\n        "undergraduateApplicationDeadline": "早申：11月1日\\n常规：1月1日", // 本科申请截止时间\n        "undergraduateScoreToefl": "100", // 本科托福要求\n        "undergraduateScoreIelts": null, // 本科雅思要求\n        "undergraduateScoreOther": "SAT或ACT。。。", // 本科其他分数要求\n        "undergraduateRequirements": "需要在网上。。。", // 本科申请要求\n        "undergraduateWorksRequirement": "不需要作品集", // 本科作品集要求\n        "graduateApplicationDeadline": null, // 研究生申请截止时间\n        "graduateScoreToefl": "100", // 研究生托福要求\n        "graduateScoreIelts": null, // 研究生雅思要求\n        "graduateScoreOther": "GRE", // 研究生其他分数要求\n        "graduateRequirements": "需要在网上申请，提交成绩单、语言成绩、GRE成绩、推荐信、个人陈述和作品集。有面试。", // 研究生申请要求\n        "graduateWorksRequirement": "通过slideroom上传。", // 研究生作品集要求\n        "difficultyName": "难" // 艺术申请难度\n      }\n    }\n  }\n}\n```\n\n### 5.4、大学案例列表数据\n\n地址：GET /data/school/offer/list\n\n参数：\n\n- **schoolId**: _integer_ 大学 ID\n- **page**: _integer_ 分页页码（从 1 开始）\n- **pageSize**: _integer_ 分页尺寸（默认 20，最大 100）\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "pagination": {\n      "page": 1, // 当前页码\n      "pageSize": 20, // 当前尺寸\n      "count": 1000 // 分页数据总数\n    },\n    "data": [\n      {\n        "id": 11296, // 案例ID\n        "title": "哈佛大学公共卫生专业硕士成功申请案例", // 案例标题\n        "targetMajorName": "公共卫生", // 申请专业中文名\n        "targetMajorEnglishName": null, // 申请专业英文名\n        "targetSchool": {\n          // 申请学校\n          "id": 4, // 学校ID\n          "chineseName": "哈佛大学", // 学校中文名\n          "englishName": "Harvard University", // 学校英文名\n          "logo": "https://..." // 学校LOGO\n        }\n      }\n      // ...\n    ]\n  }\n}\n```\n\n### 5.5、大学案例详情数据\n\n地址：GET /data/school/offer/item\n\n参数：\n\n- **offerId**: _integer_ 案例 ID\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "id": 11296, // 案例ID\n    "title": "哈佛大学公共卫生专业硕士成功申请案例", // 案例标题\n    "studentName": "萧同学", // 学生姓名\n    "currentSchoolName": null, // 就读学校\n    "currentMajorName": null, // 就读专业\n    "currentDegreeName": "大学", // 就读年级\n    "score": null, // 学术成绩\n    "scoreToefl": null, // 托福成绩\n    "scoreIelts": null, // 雅思成绩\n    "scoreSat": null, // SAT成绩\n    "scoreGre": "320-329", // GRE成绩\n    "scoreGmat": null, // GMAT成绩\n    "targetMajorName": "公共卫生", // 申请专业中文名\n    "targetMajorEnglishName": null, // 申请专业英文名\n    "applyTime": "2018-03-01", // 申请时间\n    "targetSchool": {\n      // 申请学校（同上一个接口）\n      "id": 4,\n      "chineseName": "哈佛大学",\n      "englishName": "Harvard University",\n      "logo": "https://media.xuanxiaodi.com/school/logo/af/c5/afc5ce19d2c7037cbcbd579549451b89144b0.png"\n    },\n    "targetCountryName": "美国", // 申请国家\n    "targetDegreeName": "研究生", // 申请项目\n    "relatedOffers": [\n      // 相关案例\n      {\n        "id": 4084,\n        "title": "布朗大学公共卫生专业硕士成功申请案例",\n        "targetMajorName": "公共卫生",\n        "targetMajorEnglishName": null,\n        "targetSchool": {\n          "id": 2305,\n          "chineseName": "布朗大学",\n          "englishName": "Brown University",\n          "logo": "https://media.xuanxiaodi.com/school/logo/34/a5/34a534e98c4f05a2a2c880819adfe4ec7a58.png"\n        }\n      },\n      {\n        "id": 11978,\n        "title": "埃默里大学公共卫生专业硕士成功申请案例",\n        "targetMajorName": "公共卫生",\n        "targetMajorEnglishName": null,\n        "targetSchool": {\n          "id": 2295,\n          "chineseName": "埃默里大学",\n          "englishName": "Emory University",\n          "logo": "https://media.xuanxiaodi.com/school/logo/ed/e7/ede7b5aa07f323bb1be779895c5a4745.jpg"\n        }\n      },\n      {\n        "id": 2336,\n        "title": "专业文书 收获埃默里大学公共卫生专业offer",\n        "targetMajorName": "公共卫生",\n        "targetMajorEnglishName": null,\n        "targetSchool": {\n          "id": 2295,\n          "chineseName": "埃默里大学",\n          "englishName": "Emory University",\n          "logo": "https://media.xuanxiaodi.com/school/logo/ed/e7/ede7b5aa07f323bb1be779895c5a4745.jpg"\n        }\n      }\n    ]\n  }\n}\n```\n\n### 5.6、大学专业列表数据\n\n地址：GET /data/school/major/list\n\n参数：\n\n- **schoolId**: _integer_ 大学 ID\n- **degree**: _string_ 学位类型：本科专业（`undergraduate`），研究生专业（`graduate`）\n- **categoryName**: _string_ 专业分类（筛选项，见接口 5.7）\n- **page**: _integer_ 分页页码（从 1 开始）\n- **pageSize**: _integer_ 分页尺寸（默认 20，最大 100）\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "pagination": {\n      "page": 1, // 当前页码\n      "pageSize": 20, // 当前尺寸\n      "count": 1000 // 分页数据总数\n    },\n    "data": [\n      {\n        "id": 20607, // 专业ID\n        "chineseName": "法律文科学士", // 专业中文名\n        "englishName": "BA in Law", // 专业英文名\n        "lengthOfSchool": "11个月", // 学制\n        "feeTuition": "13011英镑/学年", // 学费\n        "scoreIelts": "7.0", // 雅思要求\n        "degreeName": "本科" // 学位类型文本\n      }\n    ]\n  }\n}\n```\n\n### 5.7、大学专业列表筛选项\n\n获取专业列表的筛选项（对不同的大学和学位，筛选项中的数据可能有所不同）\n\n地址：GET /data/school/major/list/filters\n\n参数：\n\n- **schoolId**: _integer_ 大学 ID\n- **degree**: _string_ 学位类型：本科专业（`undergraduate`），研究生专业（`graduate`）\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "categories": [\n      // 专业分类筛选项（仅包括该大学/学位对应的专业存在的分类值）\n      // 对应 5.6 接口中的 categoryName 参数\n      {\n        "id": "商科", // 用于接口参数\n        "name": "商科", // 用于展示\n        "selected": false\n      }\n    ]\n  }\n}\n```\n\n### 5.8、大学专业详情数据\n\n地址：GET /data/school/major/item\n\n参数：\n\n- **majorId**: _integer_ 专业 ID\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "id": 43385, // 专业ID\n    "chineseName": "社会学硕士(现代社会与全球转型)（MPhil）", // 专业中文名\n    "englishName": "MPhil in Sociology (Modern Society and Global Transformations)", // 专业英文名\n    "degreeName": "研究生", // 学位名称\n    "categoryName": "人文社科", // 专业分类名称\n    "introduction": "", // 专业介绍\n    "lengthOfSchool": "9个月", // 学制\n    "timeApplicationDeadline": "4月26日", // 申请截止时间\n    "timeOffer": "", // Offer发放时间\n    "timeOfferDeadline": "", // Offer发放最晚时间\n    "semester": "秋季", // 开学学期\n    "feeTotal": "", // 总费用（不一定等于下面的费用的和）\n    "feeApplication": "60英镑", // 申请费\n    "feeTuition": "", // 学费\n    "feeAccommodation": "", // 住宿费\n    "feeBook": "", // 书本费\n    "feeLife": "", // 生活费\n    "feeOthers": "", // 其他费用\n    "scoreToefl": "总分：110，听力：25，阅读：25，口语：110，写作：110", // 托福要求\n    "scoreIelts": "总分：7.5，听力：7，阅读：7，口语：7.5，写作：7.5", // 雅思要求\n    "scoreNative": "", // 其他语言成绩要求\n    "scoreOthers": "", // 其他学术成绩要求\n    "scoreSat": "", // SAT要求\n    "scoreSat2": "", // SAT2要求\n    "scoreGre": "", // GRE要求\n    "scoreGmat": "", // GMAT要求\n    "scoreAct": "", // ACT要求\n    "gpa": "", // GPA要求\n    "material": "Transcript:\\nUncertified copies o...", // 申请材料\n    "scholarship": "", // 奖学金\n    "admissionElements": "学位要求：Bachelor/Mas...", // 申请要点\n    "flow": "", // 申请流程\n    "school": {\n      // 专业所在大学\n      "id": 3, // 大学ID\n      "chineseName": "剑桥大学", // 中文名\n      "englishName": "University of Cambridge", // 英文名\n      "logo": "https://..." // 学校LOGO\n    },\n    "courses": [\n      {\n        "id": 1, //  专业课程ID\n        "chineseName": "化学与环境工程中的数学方法", // 课程中文名\n        "englishName": "Mathematical Methods in Chemical & Environmental Engineering" // 课程英文名\n      }\n    ]\n  }\n}\n```\n\n## 6、高中相关接口\n\n### 6.1、高中详情数据\n\n地址：GET /data/highschool/item\n\n参数：\n\n- **highschoolId**: _integer_ 高中 ID\n\n响应：\n\n```json\n{\n  "code": 0,\n  "data": {\n    "id": 100, // 高中ID\n    "chineseName": "教堂山高中", // 高中中文名\n    "englishName": "Chapel Hill-Chauncy Hall", // 高中英文名\n    "logo": "https://...", // 高中LOGO\n    "coverImage": "https://...", // 头部区域底图\n    "introduction": "教堂山高中位于马萨。。。", // 介绍\n    "grades": "9-12, PG", // 开设年级\n    "establishmentYear": 1828, // 建校年份\n    "website": "http://www.chch.org", // 主页\n    "address": "785 Beaver Street Waltham, MA 02452", // 地址\n    "area": "40英亩", // 占地面积\n    "classSize": "10", // 班级大小\n    "tel": "781-314-0800", // 联系电话\n    "email": "admissions@chch.org", // 联系邮箱\n    "rank": "169", // 综合排名\n    "application": {\n      // 申请信息\n      "applicationDeadline": "2月1日", // 申请截止时间\n      "toeflCode": "8636", // 托福送分代码\n      "ssatCode": "2278", // SSAT送分代码\n      "iseeCode": null, // ISEE送分代码\n      "tel": "781-314-0800", // 申请联系电话\n      "email": null, // 申请联系邮箱\n      "interview": "Skype,来华面试", // 面试\n      "acceptScores": null, // 接受考试分数\n      "chineseApplicationAmount": "40", // 中国学生申请人数\n      "chineseAdmissionAmount": "5", // 中国学生录取人数\n      "chineseStudentAmount": "24", // 中国学生在读人数\n      "gradesForChineseStudent": "9 - 10", // 中国学生开放年级\n      "amountForChineseStudent": "6", // 中国学生开放名额\n      "chineseThirdpartyPreinterview": "没有要求", // 中国学生第三方预面试\n      "chineseToeflAverage": 75, // 中国学生托福平均分\n      "chineseToeflLowest": 55, // 中国学生托福最低分\n      "chineseSsatAverage": null, // 中国学生SSAT平均分\n      "chineseSsatLowest": null // 中国学生SSAT最低分\n    },\n    "summerSchool": {\n      // 暑期学校\n      "website": "...", // 官网\n      "startTime": "...", // 开始时间\n      "endTime": "...", // 结束时间\n      "grades": "...", // 年级要求\n      "ages": "...", // 年龄要求\n      "genders": "...", // 性别要求\n      "feeTuition": "...", // 学费\n      "eslCourse": "...", // ESL课程\n      "checklist": "...", // ？？？\n      "tel": "...", // 联系电话\n      "email": "..." // 联系邮箱\n    },\n    "photos": [\n      // 学校图片\n      "https://...",\n      "https://...",\n      "https://...",\n      "https://..."\n    ],\n    "apCourses": [\n      // AP课程\n      {\n        "chineseName": "工作室艺术：绘画",\n        "englishName": "Studio Art: Drawing"\n      },\n      {\n        "chineseName": "微积分AB",\n        "englishName": "Calculus AB"\n      }\n    ],\n    "sports": [\n      // 体育项目\n      {\n        "chineseName": "羽毛球",\n        "englishName": "Badminton"\n      },\n      {\n        "chineseName": "棒球",\n        "englishName": "Baseball"\n      }\n    ],\n    "communities": [\n      // 社团\n      {\n        "chineseName": null,\n        "englishName": "Admissions Tour Guides"\n      },\n      {\n        "chineseName": "国际学生组织",\n        "englishName": "International Student Organization"\n      }\n    ],\n    "countryName": "美国", // 国家\n    "provinceName": "马萨诸塞", // 州省\n    "cityName": null, // 城市\n    "cityPath": "美国-马萨诸塞", // 国家-州省-城市\n    "boarderTypeName": "寄宿学校", // 寄宿类型\n    "sexualTypeName": "男女混校", // 男女类型\n    "schoolTypeName": "大学预备", // 学校类型\n    "locationTypeName": "城市", // 地理位置\n    "religonName": "非宗教学校", // 宗教类型\n    "features": [\n      // 学校特色\n      "名校录取率高",\n      "热门学区"\n    ],\n    "pros": [\n      // 学校优势\n      "一年中三季提供24 项多层级CIF",\n      "体育项目及8 个运动俱乐部，"\n    ],\n    "honors": [\n      // 学校荣誉\n      "学校荣获100 项CIF、州及国家级锦标赛冠军"\n    ],\n    "facilities": [\n      // 校园设施\n      "健身房",\n      "棒球场",\n      "图书馆"\n    ],\n    "eslCourse": "提供ESL课程", // ESL课程\n    "apCourseCount": 4, // AP课程数\n    "feeTuition": "$59,000", // 学费\n    "studentAmount": "180", // 学生人数\n    "facultyStudentRatio": "1:5", // 师生比\n    "internationalStudentRatio": "18%", // 国际学生比\n    "boarderRatio": "40%", // 寄宿比例\n    "seniorFacultyRatio": "70%", // 高级教师比\n    "apAttendRate": null, // AP提交率\n    "apPassRate": null, // AP通过率\n    "scoreSat": "1220", // SAT分数参考\n    "alumniFund": "$11,111/人", // 校友捐赠\n    "scholarship": "..." // 奖学金\n  }\n}\n```\n\n## 附录 A：错误码列表\n\n| 错误码      | 错误原因                          | 解决方法                                                                          |\n| ----------- | --------------------------------- | --------------------------------------------------------------------------------- |\n| SCHOOL_1    | 服务器未知错误                    | 联系对接人员修复 BUG                                                              |\n| SCHOOL_4    | 请求缺少一些必要的参数            | 补充缺失的参数即可                                                                |\n| SCHOOL_11   | 请求了尚未配置的功能              | 联系对接人员申请配置对应的功能                                                    |\n| SCHOOL_20   | 请求中没有找到 appid              | 参考对接文档在请求中正确添加 appid（x-xxd-appid）                                 |\n| SCHOOL_21   | 请求提供的 appid 不正确           | 检查请求中添加的 appid 是否正确                                                   |\n| SCHOOL_22   | 请求中缺少签名相关参数            | 参考对接文档正确添加签名相关参数（x-xxd-nonce, x-xxd-timestamp, x-xxd-signature） |\n| SCHOOL_23   | 在规定时间内使用了相同的 noncestr | 检查 noncestr 生成的逻辑，确保短时间内不会生成相同的值                            |\n| SCHOOL_24   | 签名时间戳与服务器时间差距过大    | 检查调用方的时间是否与标准时间同步                                                |\n| SCHOOL_25   | 签名校验失败                      | 检查签名算法是否正确实现                                                          |\n| SCHOOL_1601 | 没有找到 ID 对应的资源            | 检查请求中提供的资源 ID 是否正确                                                  |\n\n> 注：如果出现其他的错误码，可以根据接口提供的错误信息自行处理，或者询问对接人员\n',
              children: [
                {
                  link: '/articles/coop_api.md#文档版本',
                  title: '文档版本',
                  content: [
                    '当前版本：v1.3.0',
                    '版本号 编辑人 编辑内容 v0.0.1 林康 增加了页面跳转、排行榜、咨询相关接口 v0.0.2 林康 增加了活动库相关接口、错误码列表 v0.0.3 林康 修改排行榜学校列表接口 URL 错误，及排行榜大全接口返回的数据结构 v1.0.0 林康 正式发布文档（无内容变化） v1.0.1 林康 修改排行榜大全接口（统一字段），修改活动库项目接口（增加字段） v1.0.2 林康 排行榜大学学校列表增加关于学校 LOGO 的描述 v1.1.0 林康 新增大学数据、高中数据相关接口 v1.2.0 林康 调整跳转接口（默认不重定向）；增加排名机构介绍接口，学校专业相关接口；活动详情接口增加教师信息 v1.3.0 林康 新增活动预约接口',
                    '版本号说明： 版本号遵循语义化版本规范，由 Major (A), Minor (B), Patch (C) 三部分组成。 A=0 的版本为预览版，文档已有内容极可能会变化，仅供参考。 A>0 时，仅修改已有内容的问题增加 C，添加新的内容则增加 B，增加了和之前文档不兼容的内容增加 A。',
                  ],
                },
                {
                  link: '/articles/coop_api.md#目录',
                  title: '目录',
                  content: ['[TOC]'],
                },
                {
                  link: '/articles/coop_api.md#1、页面跳转相关接口',
                  title: '1、页面跳转相关接口',
                  content: [
                    '跳转相关接口均需要单独配置对应跳转功能的 pid 才能开启，否则无法进行跳转。',
                    '1.1、跳转到大学学校页面',
                    '地址：GET /h5/school',
                    '参数：',
                    'schoolId: integer 学校的 ID redirect: boolean 是否响应为 302 重定向',
                    '响应：',
                    '{ "code": 0, "data": { "url": "https://..." //跳转地址 } }',
                    '1.2、跳转到高中学校页面',
                    '地址：GET /h5/highschool',
                    '参数：',
                    'highschoolId: integer 高中的 ID redirect: boolean 是否响应为 302 重定向',
                    '响应：',
                    '{ "code": 0, "data": { "url": "https://..." //跳转地址 } }',
                    '1.3、跳转到录取率测试工具',
                    '地址：GET /h5/tool/admission_rate',
                    '参数：',
                    'redirect: boolean 是否响应为 302 重定向',
                    '响应：',
                    '{ "code": 0, "data": { "url": "https://..." //跳转地址 } }',
                    '1.4、跳转到智能选校工具',
                    '地址：GET /h5/tool/match_school',
                    '参数：',
                    'redirect: boolean 是否响应为 302 重定向',
                    '响应：',
                    '{ "code": 0, "data": { "url": "https://..." //跳转地址 } }',
                  ],
                },
                {
                  link: '/articles/coop_api.md#2、大学排名相关接口',
                  title: '2、大学排名相关接口',
                  content: [
                    '2.1、排行榜大全接口',
                    '地址：GET /data/rankings',
                    '参数：',
                    '无',
                    '响应：',
                    '{ "code": 0, "data": [ { "groupId": 1, "groupName": "院校排名", // 有：院校排名、专业排名 "lists": [ { "listId": 1, "listName": "世界大学", // 院校排名下有：世界大学、各国大学、北美高中 // 专业排名下有：世界专业、美国专业 "schoolType": "school", // 有 school 和 highschool 两种，对应的后续不同的接口 "rankings": [ { // 排行榜对象 "id": 1, // 排行榜ID，用于排行榜学校列表 "title": "世界大学排名", // 榜单名称 "type": "USNEWS", // 排名机构 "year": 2019, // year + type + title 可以组成完整排行榜名称 "isWorldRank": true, // 是否世界排名 "isMajorRank": false, // 是否专业排名 "majorDirection": 1, // 仅专业排名有这一项，用于区分不同方向的专业排名 "schoolType": "school" // 有 school 和 highschool 两种，对应的后续不同的接口（和外层的一样） } ], "majorDirections": [ // 仅专业排名有这一项，对应上面的majorDirection，用于分类展示排行榜 { "id": 1, "name": "商科" } ] } ] } ] }',
                    '2.2、大学排行榜学校列表接口',
                    '地址：GET /data/rankings/schools',
                    '参数：',
                    'rankingId: integer 排行榜的 ID page: integer 分页页码（从 1 开始） pageSize: integer 分页尺寸（默认 20，最大 100）',
                    '响应：',
                    '{ "code": 0, "data": { "meta": { "category": { // 排行榜对象 "id": 1, // 排行榜ID "title": "世界大学排名", // 榜单名称 "type": "USNEWS", // 机构名 "year": 2019, // year + type + title 可以组成完整排行榜名称 "isWorldRank": true, // 是否世界排名 "isMajorRank": false, // 是否专业排名 "info": { // 机构介绍信息，如果没有介绍信息，则无此字段 "id": 1, // 自增的ID "key": "USNEWS", // 与排行榜列表中的机构字段对应 "name": "USNEWS", // 完整介绍名称 "logo": "https://...", // 机构LOGO "introduction": "《USNEWS..." // 机构介绍 } } }, "pagination": { "page": 1, // 当前页码 "pageSize": 20, // 当前尺寸 "count": 1000 // 分页数据总数 }, "data": [ { "id": 1, // 递增ID，没有意义 "schoolId": 4, // 学校ID "logo": "https://...", // 学校LOGO "chineseName": "", // 学校中文名 "englishName": "", // 学校英文名 "rank": "1", // 排名字符串 "rankValue": 1, // 排名值（排名为范围时取最高值） "countryName": "", // 国家 "provinceName": "", // 省份 "cityName": "" // 城市 } // ... ] } }',
                    '2.3、高中排行榜学校列表接口',
                    '地址：GET /data/rankings/highschools',
                    '参数：',
                    'rankingId: integer 排行榜的 ID page: integer 分页页码（从 1 开始） pageSize: integer 分页尺寸（默认 20，最大 100）',
                    '响应：',
                    '{ "code": 0, "data": { "meta": { "categoryId": 1, // 排行榜ID "title": "世界大学排名", // 榜单名称 "org": "USNEWS", // 机构名 "year": 2019 // year + org + title 可以组成完整排行榜名称 }, "pagination": { "page": 1, // 当前页码 "pageSize": 20, // 当前尺寸 "count": 1000 // 分页数据总数 }, "data": [ { "id": 1, // 递增ID，没有意义 "highschoolId": 4, // 高中ID // 高中学校没有LOGO "chineseName": "", // 高中中文名 "englishName": "", // 高中英文名 "rank": "1", // 排名字符串 "rankValue": 1, // 排名值（排名为范围时取最高值） "countryName": "", // 国家 "provinceName": "", // 省份 "cityName": "" // 城市 } // ... ] } }',
                    '2.4、排名机构介绍接口',
                    '该接口用于获取排名机构的介绍信息。',
                    '地址：GET /data/rankings/info',
                    '参数：',
                    '无',
                    '响应：',
                    '{ "code": 0, "data": [ { "id": 1, // 自增的ID "key": "泰晤士", // 与排行榜列表中的机构字段对应 "name": "泰晤士高等教育（THE）", // 完整介绍名称 "logo": "https://...", // 机构LOGO "introduction": "《泰晤士高等教..." // 机构介绍 } ] }',
                  ],
                },
                {
                  link: '/articles/coop_api.md#3、资讯相关接口',
                  title: '3、资讯相关接口',
                  content: [
                    '3.1、资讯列表数据',
                    '获取资讯列表（分页）',
                    '地址：GET /data/news/list',
                    '参数：',
                    'categoryId: string 资讯的分类，接口 3.3 中可以获取到（路径为 data.categories，具有两层结构） regionId: string 资讯相关地区 ID，接口 3.3 中可以获取到（路径为 data.regions，单层接口） page: integer 分页页码（从 1 开始） pageSize: integer 分页尺寸（默认 20，最大 100）',
                    '响应：',
                    '{ "code": 0, "data": { "pagination": { "page": 1, // 当前页码 "pageSize": 20, // 当前尺寸 "count": 1000 // 分页数据总数 }, "data": [ { "id": 1, // 资讯ID "title": "", // 资讯标题 "coverUrl": "", // 资讯封面图 "publishTime": "", // 发布时间（ISO-8601） "publishDate": "", // 发布日期（YYYY-MM-DD） "preview": "", // 资讯内容提要（纯文本） "categoryGroupName": "", // 一级分类名 "categoryName": "" // 二级分类名 } // ... ] } }',
                    '3.2、资讯详情数据',
                    '地址：GET /data/news/item',
                    '参数：',
                    'newsId: integer 资讯 ID',
                    '响应：',
                    '{ "code": 0, "data": { "id": 1, // 资讯ID "title": "", // 资讯标题 "coverUrl": "", // 资讯封面图 "content": "", // 资讯内容（HTML） "publishTime": "", // 发布时间（ISO-8601） "publishDate": "", // 发布日期（YYYY-MM-DD） "regionName": "", // 相关国家名 "categoryGroupName": "", // 一级分类名 "categoryName": "" // 二级分类名 } }',
                    '3.3、资讯列表筛选项数据',
                    '获取用于资讯列表参数的筛选项数据，筛选项为 { id, name } 结构的数据，name 用于展示，id 用于参数传递。',
                    '地址：GET /data/news/list/filters',
                    '参数：',
                    '无',
                    '响应：',
                    '{ "code": 0, "data": { "categories": [ { "group": "GROUP_1", "groupName": "分类1", "options": [ { "id": "OPTION_1", "name": "分类1选项1" } ] } ], "regions": [ { "id": "REGION_1", "name": "地区1" } ] } }',
                  ],
                },
                {
                  link: '/articles/coop_api.md#4、活动库相关接口',
                  title: '4、活动库相关接口',
                  content: [
                    '4.1、活动库列表数据',
                    '地址：GET /data/activities/list',
                    '参数：',
                    'adeptGrade: integer 按当前年级筛选活动，数据见接口 4.3 adeptMajor: integer 按专业方向筛选活动 adeptType: integer 按类型筛选活动 adeptMonth: integer 按时间筛选活动 page: integer 分页页码（从 1 开始） pageSize: integer 分页尺寸（默认 20，最大 100）',
                    '响应：',
                    '{ "code": 0, "data": { "pagination": { "page": 1, // 当前页码 "pageSize": 20, // 当前尺寸 "count": 1000 // 分页数据总数 }, "data": [ { "id": 470, // 活动项目ID "name": "马尔可夫决策过程（MDP）", // 活动名称 "activityTime": "滚动", // 活动时间（和筛选项不同，这是更详细的描述） "place": "南京" // 活动地点 } ] } }',
                    '4.2、活动库项目数据',
                    '注：活动预约资讯需要 appointEnabled 字段为 true 才可以进行预约资讯（不管是通过 appointUrl 跳转到预约页面，还是通过接口提交预约）',
                    '地址：GET /data/activities/item',
                    '参数：',
                    'activityId: integer 活动项目 ID',
                    '响应：',
                    '{ "code": 0, "data": { "id": 470, // 活动项目ID "name": "马尔可夫决策过程（MDP）", // 活动名称 "activityTime": "滚动", // 活动时间（和筛选项不同，这是更详细的描述） "place": "南京", // 活动地点 "major": "理工科", // 活动适合专业 "introduction": "当今，社会信息化，特别是大数据、人工智能迅猛发展，作为其实现技术的程序设计变得越来越重要。程序设计课程体系也已经不仅仅是大学计算机专业的必修课程，而是逐渐成为一种时代的基本素颜。然而，在目前国内外程序设计课程体系的教材和教学侧重于理论教学，缺乏编程解决问题能力的实践训练。为此，本课程系统、全面磨炼编程解决问题的能力为目的，基于程序设计的知识体系（程序设计语言、数据结构、算法、数学），以案例教学的方法，教授知识点及相关试题，并让学生编程解决问题。", // 活动描述 "expectedOutcome": "课题科研报告&学术论文发表、纸质推荐信、教授网络推荐信、官方项目结业证书", // 项目预期成果 "note": "清北等985/211院校博士导师1对1线上指导。", // 备注 "appointEnabled": true, // 是否可预约 "appointUrl": "https://xxxxxx", // 预约链接，需要配置预约功能的pid才能获取到 "consultant": { // 活动提供者（导师账号） // 有些活动没有提供者，则没有此对象 "id": 1, // 提供者 ID，用于在预约接口（暂无）中指定预约导师 "name": "张三", // 提供者姓名 "avatar": "https://..." // 提供者头像 } } }',
                    '4.3、活动库列表筛选项数据',
                    '地址：GET /data/activities/list/filters',
                    '参数：',
                    '无',
                    '响应：',
                    '{ "code": 0, "data": { "adeptGrade": [ { "id": 1, // 选项ID，用于接口中 "name": "初中", // 选项名称，用于展示 "isDefault": false // 是否默认选项 } ], "adeptMajor": [ { "id": 1, // 选项ID，用于接口中 "name": "工科", // 选项名称，用于展示 "isDefault": false // 是否默认选项 } ], "adeptType": [ { "id": 1, // 选项ID，用于接口中 "name": "实习实训", // 选项名称，用于展示 "isDefault": false // 是否默认选项 } ], "adeptMonth": [ { "id": 1, // 选项ID，用于接口中 "name": "1月", // 选项名称，用于展示 "isDefault": false // 是否默认选项 } ] } }',
                    '4.4、活动预约接口',
                    '注：接入方需要保证填写的手机号是有效的。',
                    '地址：POST /action/activities/appoint',
                    '参数：',
                    'activityId: number 活动 ID（必须是可预约的活动） contactName: string 预约人姓名（必填） contactPhone: string 预约人手机号（必填） cityName: string 预约人所在城市（非必填，默认值为 "未知"）',
                    '响应：',
                    '{ "code": 0, "data": { "success": true } }',
                  ],
                },
                {
                  link: '/articles/coop_api.md#5、大学相关接口',
                  title: '5、大学相关接口',
                  content: [
                    '5.1、大学列表数据',
                    '地址：GET /data/school/list',
                    '参数：',
                    'country: string 按国家筛选（取值见接口 5.2） ranking: string 按国内排名筛选（取值见接口 5.2） toefl: string 按托福要求筛选（取值见接口 5.2） ielts: string 按雅思要求筛选（取值见接口 5.2） fee: string 按每年费用筛选（取值见接口 5.2） page: integer 分页页码（从 1 开始） pageSize: integer 分页尺寸（默认 20，最大 100）',
                    '{ "code": 0, "data": { "pagination": { "page": 1, // 当前页码 "pageSize": 20, // 当前尺寸 "count": 1000 // 分页数据总数 }, "data": [ { "id": 7, // 学校ID "chineseName": "多伦多大学", // 学校中文名 "englishName": "University of Toronto", // 学校英文名 "logo": "https://...", // 学校LOGO "coverPicture": "https://...", // 背景图片 "establishmentYear": 1827, // 建校年份 "feeTotal": "43,180美元", // 学费 "scoreToefl": "100", // 托福要求 "scoreIelts": "6.5", // 雅思要求 "scoreSat": null, // SAT要求 "gpa": null, // GPA要求 "scoreGreGrad": null, // 研究生GRE要求 "scoreGmatGrad": null, // 研究生GMAT要求 "scoreAct": null, // ACT要求 "countryName": "加拿大", // 国家 "provinceName": "加拿大", // 州省 "cityName": "多伦多", // 城市 "cityPath": "加拿大-多伦多", // 国家-州省-城市 "typeName": "公立", // 学校性质 "TIE_ADMINSSION_RATE": "10.0%", // 录取率 "worldRankings": [ // 世界排名 { "id": 1271, // 榜单ID "type": "QS", // 排名机构 "year": 2020, // 榜单年份 "title": "世界大学排名", // 榜单名称 "rank": 29 // 学校的排名 } // ... ], "localRankings": [ // 国内排名 { "id": 1294, "type": "USNEWS", "year": 2019, "title": "加拿大大学排名", "rank": 1 } // ... ] } // ... ] } }',
                    '5.2、大学列表筛选项数据',
                    '地址：GET /data/school/list/filters',
                    '参数：',
                    '无',
                    '响应：',
                    '{ "code": 0, "data": { "countries": [ // 国家筛选项，id用于接口参数，name用于展示 { "id": "", "name": "全球" }, { "id": "226", "name": "美国" } // ... ], "rankings": [ // 国内排名筛选项，id用于接口参数，name用于展示 { "id": "", "name": "不限" }, { "id": "1,10", "name": "1-10名" } // ... ], "toefl": [ // 托福要求筛选项，id用于接口参数，name用于展示 { "id": "", "name": "不限" }, { "id": "null", "name": "不要求" }, { "id": ",80", "name": "80分以下" } // ... ], "ielts": [ // 雅思要求筛选项，id用于接口参数，name用于展示 { "id": "", "name": "不限" }, { "id": "null", "name": "不要求" }, { "id": ",5.4999", "name": "5.5分以下" } // ... ], "fees": [ // 每年费用筛选项，id用于接口参数，name用于展示 { "id": "", "name": "不限" }, { "id": ",19999", "name": "2万美元以下" } // ... ] } }',
                    '5.3、大学详情数据',
                    '地址：GET /data/school/item',
                    '参数：',
                    'schoolId: integer 大学 ID',
                    '响应：',
                    '{ "code": 0, "data": { "id": 4, "chineseName": "哈佛大学", // 学校中文名 "englishName": "Harvard University", // 学校英文名 "logo": "https://...", // 学校LOGO "motto": "Veritas (Truth)", // 校训 "establishmentYear": 1636, // 建校年份 "area": "总面积20.6Km2，市区", // 占地面积 "group": "常春藤盟校、美国大学协会（AAU）", // 学校所属集团 "website": "http://www.harvard.edu/", // 学校官网 "textIntroduction": "哈佛大学（Harvard University）成立于1636年。。。", // 文字简介 "address": "Massachusetts Hall, Cambridge, Massachusetts 02138", // 学校地址 "coverPicture": "https://...", // 页面头部底图 "hotMajors": [ // 热门专业 "广告学", "物理科学", "生物科学" ], "features": [ // 学校特色 { "keyword": "世界顶尖大学", "description": "哈佛大学是全美第一所大学，同时是。。。" }, { "keyword": "世界顶尖教学水平", "description": "哈佛大学的所有本科专业教育水平都。。。" } // ... ], "nativeName": null, // 本国名（比如日本院校的日文名） "worldRankings": [ // 排名信息（世界排名） { "id": 1271, // 榜单ID "type": "QS", // 排名机构 "year": 2020, // 榜单年份 "title": "世界大学排名", // 榜单名称 "rank": 3 // 学校的排名 }, { "id": 1222, "type": "USNEWS", "year": 2019, "title": "世界大学排名", "rank": 1 } // ... ], "localRankings": [ // 排名信息（本国排名） { "id": 1298, // 和上面一样 "type": "USNEWS", "year": 2020, "title": "美国综合性大学排名", "rank": 2 }, { "id": 1218, "type": "泰晤士", "year": 2019, "title": "美国大学排名", "rank": 1 } // ... ], "extraInfo": { // 这里面的都是描述性的文本信息 "TIE_LOCATION": "它的总部。。。", // 地理位置 "TIE_HISTORY": "15世纪末，由。。。", // 学校历史 "TIE_FEATURE": "截止2014年，哈。。。", // 学校特色 "TIE_LIBRARY": "哈佛大学图书馆。。。", // 图书馆介绍 "TIE_INSTALLATION": "哈佛大学校。。。", // 校园设施 "TIE_ACCOMMODATION": "哈佛的住。。。", // 学校住宿 "TIE_DEPARTMENT_MAJOR": "截至2014年。。。", // 院系设置介绍 "TIE_TEACHING": "哈佛采用半。。。", // 教学特色 "TIE_CAMPUS": "哈佛大学占地85公顷的。。。", // 校园环境 "TIE_ADMINSSION_RATE": "5%", // 学校录取率（一般指本科） "TIE_APPLICATION_STUDENT_AMOUNT": "", // 申请学生人数 "TIE_ADMISSIONS_OFFICE": "本科招办联系方。。。", // 招生办信息 "TIE_STUDENT_AMOUNT": "21,966", // 学生人数 "TIE_UNDERGRADUATE_AMOUNT": "7,029", // 本科生人数 "TIE_GRADUATE_AMOUNT": "14,937", // 研究生人数 "TIE_INTERNATIONAL_STUDENT_RATIO": "21.4%", // 国际学生比 "TIE_FACULTY_STUDENT_RATIO": "1:7", // 师生比 "TIE_GRADUATION_RATE": "86%", // 毕业率 "TIE_EMPLOYMENT_RATE": "91.1%", // 就业率 "TIE_EMPLOYMENT_PAY": "毕业起薪：$。。。", // 就业薪资 "TIE_BOY_GIRL_RATIO": "53:47" // 男女比例 }, "evaluationBad": [ // 学校差评项 "People often focus too much on future careers and making money, and sometimes lose track of enjoying the present.", "Professors are brilliant, but tracking them down for a one-on-one conversation requires a degree of patience." // ... ], "evaluationGood": [ // 学校好评项 "Access to the best professors and minds of our time", "The student motivation and ambition on campus is contagious." // ... ], "strongMajors": [ // 强势专业 "商学院", "法学院", "教育学院", "生物医学领域专业" ], "aceFields": [ // 王牌领域（和强势专业类似，不一定指专业） "商业", "法律", "生物医学领域" ], "selectionReason": [ // 择校理由 "哈佛大学(Harvard University)，美国大学教育的旗舰，常青藤联盟的代表。", "哈佛大学商学院是这个星球上最好的商学院，没有其他。", "哈佛大学的所有本科学科教育水平都是世界顶级的。", "哈佛大学图书馆是世界上最大的大学图书馆。" ], "videos": [ // 相关视频 { "id": 4, // 视频ID "name": "小俊好帅", // 视频标题 "coverUrl": "https://...", // 视频封面 "videoDuration": 43023, // 视频时长（秒） "watchCount": 2212, // 观看次数 "likeCount": 0 // 点赞次数 } // ... ], "countryName": "美国", // 国家 "provinceName": "马萨诸塞", // 州省 "cityName": "波士顿", // 城市 "typeName": "私立", // 学校性质 "cityPath": "美国-马萨诸塞-波士顿", // 国家-州省-城市（其中会省略重复或者缺失的部分） "photos": [ // 学校图片 "https://...", "https://...", "https://...", "https://..." ], "coverBottomColor": "#2C2C13", // 头部区域底色（一般与头部底图配合使用） "application": { // 申请信息 "undergraduate": { // 本科申请信息 "adminssionRate": "5%", // 录取率 "applicationStudentAmount": "42,749", // 申请人数 "introduction": "", // 申请简介 "material": "申请表：在线填写。。。", // 申请材料 "scoreToefl": "接受，暂无最低分数要求", // 托福成绩要求 "scoreIelts": "6.5", // 雅思成绩要求 "scoreSat": "总分：1420-1560，阅。。。", // SAT分数要求（本科） "scoreGre": "...", // GRE分数要求（研究生） "scoreGmat": "...", // GMAT分数要求（研究生） "gpa": 3.8, // GPA要求 "feeApplication": "75美元", // 申请费 "feeTuition": "US$51,925", // 学费 "feeAccommodation": "US$17,682", // 住宿费 "feeBook": "US$1,200", // 书本费 "feeLife": "US$2,993", // 生活费 "scholarship": "哈佛大学奖学金十。。。", // 奖学金描述 "timeApplicationDeadline": "1月1日（EA：11月1日 RD：1月1日）", // 申请截止时间 "timeOffer": "4月1日", // Offer发放时间 "timeOfferDeadline": "5月1日", // Offer发放截止时间 "semester": "秋季", // 申请学期 "adminssionElements": "...", // 申请要点（描述） "scoreSat2": "650-800", // SAT2成绩要求（本科） "scoreAct": "32-35", // ACT要求（本科） "feeTotal": "US$73,800", // 总费用（参考值） "flow": "1. 参加标准化的入学考。。。", // 申请流程 "requireInterview": false, // 是否需要面试 "feeOthers": "...", // 其他费用 "scoreNative": "...", // 本地语言考试成绩要求 "scoreOthers": "..." // 其他分数要求 }, "graduate": { // 研究生申请信息 // 同本科申请 }, "arts": { // 艺术申请信息 "admissionRate": 0.06, // 录取率 "strongMajors": "景观设计", // 强势艺术专业 "undergraduateMajors": "艺术史，。。。", // 本科艺术专业 "graduateMajors": "建筑，景观建筑，。。。", // 研究生艺术专业 "textIntroduction": "哈佛大学。。。", // 艺术申请简介 "alumni": "胡复刚\\n物理学家、教育家。。。", // 校友介绍 "locationInfo": "位置\\n哈佛大学位于波士顿，。。。", // 地理位置 "feeTuition": "47,047美元", // 学费 "feeLife": null, // 生活费 "feeAccommodation": "15,951美元", // 住宿费 "feeBook": "2,000美元", // 书本费 "feeTraffic": "950美元", // 交通费 "feeOther": "1,875美元", // 其他费用 "feeTotal": "67,823美元", // 总费用（参考值） "averageScholarship": "46409", // 平均奖学金 "applicationExperience": "哈佛是全世。。。", // 申请经验 "undergraduateApplicationDeadline": "早申：11月1日\\n常规：1月1日", // 本科申请截止时间 "undergraduateScoreToefl": "100", // 本科托福要求 "undergraduateScoreIelts": null, // 本科雅思要求 "undergraduateScoreOther": "SAT或ACT。。。", // 本科其他分数要求 "undergraduateRequirements": "需要在网上。。。", // 本科申请要求 "undergraduateWorksRequirement": "不需要作品集", // 本科作品集要求 "graduateApplicationDeadline": null, // 研究生申请截止时间 "graduateScoreToefl": "100", // 研究生托福要求 "graduateScoreIelts": null, // 研究生雅思要求 "graduateScoreOther": "GRE", // 研究生其他分数要求 "graduateRequirements": "需要在网上申请，提交成绩单、语言成绩、GRE成绩、推荐信、个人陈述和作品集。有面试。", // 研究生申请要求 "graduateWorksRequirement": "通过slideroom上传。", // 研究生作品集要求 "difficultyName": "难" // 艺术申请难度 } } } }',
                    '5.4、大学案例列表数据',
                    '地址：GET /data/school/offer/list',
                    '参数：',
                    'schoolId: integer 大学 ID page: integer 分页页码（从 1 开始） pageSize: integer 分页尺寸（默认 20，最大 100）',
                    '响应：',
                    '{ "code": 0, "data": { "pagination": { "page": 1, // 当前页码 "pageSize": 20, // 当前尺寸 "count": 1000 // 分页数据总数 }, "data": [ { "id": 11296, // 案例ID "title": "哈佛大学公共卫生专业硕士成功申请案例", // 案例标题 "targetMajorName": "公共卫生", // 申请专业中文名 "targetMajorEnglishName": null, // 申请专业英文名 "targetSchool": { // 申请学校 "id": 4, // 学校ID "chineseName": "哈佛大学", // 学校中文名 "englishName": "Harvard University", // 学校英文名 "logo": "https://..." // 学校LOGO } } // ... ] } }',
                    '5.5、大学案例详情数据',
                    '地址：GET /data/school/offer/item',
                    '参数：',
                    'offerId: integer 案例 ID',
                    '响应：',
                    '{ "code": 0, "data": { "id": 11296, // 案例ID "title": "哈佛大学公共卫生专业硕士成功申请案例", // 案例标题 "studentName": "萧同学", // 学生姓名 "currentSchoolName": null, // 就读学校 "currentMajorName": null, // 就读专业 "currentDegreeName": "大学", // 就读年级 "score": null, // 学术成绩 "scoreToefl": null, // 托福成绩 "scoreIelts": null, // 雅思成绩 "scoreSat": null, // SAT成绩 "scoreGre": "320-329", // GRE成绩 "scoreGmat": null, // GMAT成绩 "targetMajorName": "公共卫生", // 申请专业中文名 "targetMajorEnglishName": null, // 申请专业英文名 "applyTime": "2018-03-01", // 申请时间 "targetSchool": { // 申请学校（同上一个接口） "id": 4, "chineseName": "哈佛大学", "englishName": "Harvard University", "logo": "https://media.xuanxiaodi.com/school/logo/af/c5/afc5ce19d2c7037cbcbd579549451b89144b0.png" }, "targetCountryName": "美国", // 申请国家 "targetDegreeName": "研究生", // 申请项目 "relatedOffers": [ // 相关案例 { "id": 4084, "title": "布朗大学公共卫生专业硕士成功申请案例", "targetMajorName": "公共卫生", "targetMajorEnglishName": null, "targetSchool": { "id": 2305, "chineseName": "布朗大学", "englishName": "Brown University", "logo": "https://media.xuanxiaodi.com/school/logo/34/a5/34a534e98c4f05a2a2c880819adfe4ec7a58.png" } }, { "id": 11978, "title": "埃默里大学公共卫生专业硕士成功申请案例", "targetMajorName": "公共卫生", "targetMajorEnglishName": null, "targetSchool": { "id": 2295, "chineseName": "埃默里大学", "englishName": "Emory University", "logo": "https://media.xuanxiaodi.com/school/logo/ed/e7/ede7b5aa07f323bb1be779895c5a4745.jpg" } }, { "id": 2336, "title": "专业文书 收获埃默里大学公共卫生专业offer", "targetMajorName": "公共卫生", "targetMajorEnglishName": null, "targetSchool": { "id": 2295, "chineseName": "埃默里大学", "englishName": "Emory University", "logo": "https://media.xuanxiaodi.com/school/logo/ed/e7/ede7b5aa07f323bb1be779895c5a4745.jpg" } } ] } }',
                    '5.6、大学专业列表数据',
                    '地址：GET /data/school/major/list',
                    '参数：',
                    'schoolId: integer 大学 ID degree: string 学位类型：本科专业（undergraduate），研究生专业（graduate） categoryName: string 专业分类（筛选项，见接口 5.7） page: integer 分页页码（从 1 开始） pageSize: integer 分页尺寸（默认 20，最大 100）',
                    '响应：',
                    '{ "code": 0, "data": { "pagination": { "page": 1, // 当前页码 "pageSize": 20, // 当前尺寸 "count": 1000 // 分页数据总数 }, "data": [ { "id": 20607, // 专业ID "chineseName": "法律文科学士", // 专业中文名 "englishName": "BA in Law", // 专业英文名 "lengthOfSchool": "11个月", // 学制 "feeTuition": "13011英镑/学年", // 学费 "scoreIelts": "7.0", // 雅思要求 "degreeName": "本科" // 学位类型文本 } ] } }',
                    '5.7、大学专业列表筛选项',
                    '获取专业列表的筛选项（对不同的大学和学位，筛选项中的数据可能有所不同）',
                    '地址：GET /data/school/major/list/filters',
                    '参数：',
                    'schoolId: integer 大学 ID degree: string 学位类型：本科专业（undergraduate），研究生专业（graduate）',
                    '响应：',
                    '{ "code": 0, "data": { "categories": [ // 专业分类筛选项（仅包括该大学/学位对应的专业存在的分类值） // 对应 5.6 接口中的 categoryName 参数 { "id": "商科", // 用于接口参数 "name": "商科", // 用于展示 "selected": false } ] } }',
                    '5.8、大学专业详情数据',
                    '地址：GET /data/school/major/item',
                    '参数：',
                    'majorId: integer 专业 ID',
                    '响应：',
                    '{ "code": 0, "data": { "id": 43385, // 专业ID "chineseName": "社会学硕士(现代社会与全球转型)（MPhil）", // 专业中文名 "englishName": "MPhil in Sociology (Modern Society and Global Transformations)", // 专业英文名 "degreeName": "研究生", // 学位名称 "categoryName": "人文社科", // 专业分类名称 "introduction": "", // 专业介绍 "lengthOfSchool": "9个月", // 学制 "timeApplicationDeadline": "4月26日", // 申请截止时间 "timeOffer": "", // Offer发放时间 "timeOfferDeadline": "", // Offer发放最晚时间 "semester": "秋季", // 开学学期 "feeTotal": "", // 总费用（不一定等于下面的费用的和） "feeApplication": "60英镑", // 申请费 "feeTuition": "", // 学费 "feeAccommodation": "", // 住宿费 "feeBook": "", // 书本费 "feeLife": "", // 生活费 "feeOthers": "", // 其他费用 "scoreToefl": "总分：110，听力：25，阅读：25，口语：110，写作：110", // 托福要求 "scoreIelts": "总分：7.5，听力：7，阅读：7，口语：7.5，写作：7.5", // 雅思要求 "scoreNative": "", // 其他语言成绩要求 "scoreOthers": "", // 其他学术成绩要求 "scoreSat": "", // SAT要求 "scoreSat2": "", // SAT2要求 "scoreGre": "", // GRE要求 "scoreGmat": "", // GMAT要求 "scoreAct": "", // ACT要求 "gpa": "", // GPA要求 "material": "Transcript:\\nUncertified copies o...", // 申请材料 "scholarship": "", // 奖学金 "admissionElements": "学位要求：Bachelor/Mas...", // 申请要点 "flow": "", // 申请流程 "school": { // 专业所在大学 "id": 3, // 大学ID "chineseName": "剑桥大学", // 中文名 "englishName": "University of Cambridge", // 英文名 "logo": "https://..." // 学校LOGO }, "courses": [ { "id": 1, // 专业课程ID "chineseName": "化学与环境工程中的数学方法", // 课程中文名 "englishName": "Mathematical Methods in Chemical & Environmental Engineering" // 课程英文名 } ] } }',
                  ],
                },
                {
                  link: '/articles/coop_api.md#6、高中相关接口',
                  title: '6、高中相关接口',
                  content: [
                    '6.1、高中详情数据',
                    '地址：GET /data/highschool/item',
                    '参数：',
                    'highschoolId: integer 高中 ID',
                    '响应：',
                    '{ "code": 0, "data": { "id": 100, // 高中ID "chineseName": "教堂山高中", // 高中中文名 "englishName": "Chapel Hill-Chauncy Hall", // 高中英文名 "logo": "https://...", // 高中LOGO "coverImage": "https://...", // 头部区域底图 "introduction": "教堂山高中位于马萨。。。", // 介绍 "grades": "9-12, PG", // 开设年级 "establishmentYear": 1828, // 建校年份 "website": "http://www.chch.org", // 主页 "address": "785 Beaver Street Waltham, MA 02452", // 地址 "area": "40英亩", // 占地面积 "classSize": "10", // 班级大小 "tel": "781-314-0800", // 联系电话 "email": "admissions@chch.org", // 联系邮箱 "rank": "169", // 综合排名 "application": { // 申请信息 "applicationDeadline": "2月1日", // 申请截止时间 "toeflCode": "8636", // 托福送分代码 "ssatCode": "2278", // SSAT送分代码 "iseeCode": null, // ISEE送分代码 "tel": "781-314-0800", // 申请联系电话 "email": null, // 申请联系邮箱 "interview": "Skype,来华面试", // 面试 "acceptScores": null, // 接受考试分数 "chineseApplicationAmount": "40", // 中国学生申请人数 "chineseAdmissionAmount": "5", // 中国学生录取人数 "chineseStudentAmount": "24", // 中国学生在读人数 "gradesForChineseStudent": "9 - 10", // 中国学生开放年级 "amountForChineseStudent": "6", // 中国学生开放名额 "chineseThirdpartyPreinterview": "没有要求", // 中国学生第三方预面试 "chineseToeflAverage": 75, // 中国学生托福平均分 "chineseToeflLowest": 55, // 中国学生托福最低分 "chineseSsatAverage": null, // 中国学生SSAT平均分 "chineseSsatLowest": null // 中国学生SSAT最低分 }, "summerSchool": { // 暑期学校 "website": "...", // 官网 "startTime": "...", // 开始时间 "endTime": "...", // 结束时间 "grades": "...", // 年级要求 "ages": "...", // 年龄要求 "genders": "...", // 性别要求 "feeTuition": "...", // 学费 "eslCourse": "...", // ESL课程 "checklist": "...", // ？？？ "tel": "...", // 联系电话 "email": "..." // 联系邮箱 }, "photos": [ // 学校图片 "https://...", "https://...", "https://...", "https://..." ], "apCourses": [ // AP课程 { "chineseName": "工作室艺术：绘画", "englishName": "Studio Art: Drawing" }, { "chineseName": "微积分AB", "englishName": "Calculus AB" } ], "sports": [ // 体育项目 { "chineseName": "羽毛球", "englishName": "Badminton" }, { "chineseName": "棒球", "englishName": "Baseball" } ], "communities": [ // 社团 { "chineseName": null, "englishName": "Admissions Tour Guides" }, { "chineseName": "国际学生组织", "englishName": "International Student Organization" } ], "countryName": "美国", // 国家 "provinceName": "马萨诸塞", // 州省 "cityName": null, // 城市 "cityPath": "美国-马萨诸塞", // 国家-州省-城市 "boarderTypeName": "寄宿学校", // 寄宿类型 "sexualTypeName": "男女混校", // 男女类型 "schoolTypeName": "大学预备", // 学校类型 "locationTypeName": "城市", // 地理位置 "religonName": "非宗教学校", // 宗教类型 "features": [ // 学校特色 "名校录取率高", "热门学区" ], "pros": [ // 学校优势 "一年中三季提供24 项多层级CIF", "体育项目及8 个运动俱乐部，" ], "honors": [ // 学校荣誉 "学校荣获100 项CIF、州及国家级锦标赛冠军" ], "facilities": [ // 校园设施 "健身房", "棒球场", "图书馆" ], "eslCourse": "提供ESL课程", // ESL课程 "apCourseCount": 4, // AP课程数 "feeTuition": "$59,000", // 学费 "studentAmount": "180", // 学生人数 "facultyStudentRatio": "1:5", // 师生比 "internationalStudentRatio": "18%", // 国际学生比 "boarderRatio": "40%", // 寄宿比例 "seniorFacultyRatio": "70%", // 高级教师比 "apAttendRate": null, // AP提交率 "apPassRate": null, // AP通过率 "scoreSat": "1220", // SAT分数参考 "alumniFund": "$11,111/人", // 校友捐赠 "scholarship": "..." // 奖学金 } }',
                  ],
                },
                {
                  link: '/articles/coop_api.md#附录-a：错误码列表',
                  title: '附录 A：错误码列表',
                  content: [
                    '错误码 错误原因 解决方法 SCHOOL_1 服务器未知错误 联系对接人员修复 BUG SCHOOL_4 请求缺少一些必要的参数 补充缺失的参数即可 SCHOOL_11 请求了尚未配置的功能 联系对接人员申请配置对应的功能 SCHOOL_20 请求中没有找到 appid 参考对接文档在请求中正确添加 appid（x-xxd-appid） SCHOOL_21 请求提供的 appid 不正确 检查请求中添加的 appid 是否正确 SCHOOL_22 请求中缺少签名相关参数 参考对接文档正确添加签名相关参数（x-xxd-nonce, x-xxd-timestamp, x-xxd-signature） SCHOOL_23 在规定时间内使用了相同的 noncestr 检查 noncestr 生成的逻辑，确保短时间内不会生成相同的值 SCHOOL_24 签名时间戳与服务器时间差距过大 检查调用方的时间是否与标准时间同步 SCHOOL_25 签名校验失败 检查签名算法是否正确实现 SCHOOL_1601 没有找到 ID 对应的资源 检查请求中提供的资源 ID 是否正确',
                    '注：如果出现其他的错误码，可以根据接口提供的错误信息自行处理，或者询问对接人员',
                  ],
                },
              ],
            },
            {
              link: '/articles/coop_spec.md',
              title: '选校帝对外接口规范',
              content: ['本文档描述选校帝对外接口的基本调用规范。'],
              markdown:
                '# 选校帝对外接口规范\n\n本文档描述选校帝对外接口的基本调用规范。\n\n## 文档版本\n\n当前版本：v1.1.0\n\n| 版本号 | 编辑人 | 编辑内容                                                         |\n| ------ | ------ | ---------------------------------------------------------------- |\n| v0.0.1 | 林康   | 增加了接口数据传输方式的文档；增加了接口签名相关文档和示例代码。 |\n| v1.0.0 | 林康   | 正式发布文档（无内容变化）                                       |\n| v1.1.0 | 林康   | 添加验签部分的文档；调整附录代码                                 |\n\n> 版本号说明：\n>\n> - 版本号遵循语义化版本规范，由 Major (A), Minor (B), Patch (C) 三部分组成。\n> - A=0 的版本为预览版，文档已有内容极可能会变化，仅供参考。\n> - A>0 时，仅修改已有内容的问题增加 C，添加新的内容则增加 B，增加了和之前文档不兼容的内容增加 A。\n\n## 目录\n\n[TOC]\n\n## 1、接口数据传输方式\n\n**请求参数：**\n\nGET 请求的参数使用请求地址中的 query 部分传递。\n\nPOST 请求的参数使用请求体传输（支持 application/json 与 application/x-www-form-urlencoded 格式）\n\n**请求响应结构：**\n\n接口响应均为 application/json 类型（除非遇到网关级别的错误）\n\n正常返回的响应结构：\n\n```json\n{\n    "code": 0, // 状态码，成功时一定返回0\n    "data": ... // 结果数据，根据接口不同有不同结构\n}\n```\n\n错误返回的响应结构：\n\n```json\n{\n  "code": "SCHOOL_4", // 状态码，出错时一定是字符串\n  "msg": "参数错误" // 错误提示\n}\n```\n\n## 2、合作方身份标识与签名机制\n\n### 2.1、合作方的身份标识\n\n每个合作方都分配一对密码（appid 与 secret）\n\n- appid 是合作方的身份标识，需要在鉴权时提供给选校帝接口\n- secret 是合作方的密钥，不通过接口传输，仅参与签名等内部运算\n\n**注：key 需要在调用接口时由请求头 `x-xxd-appid` 传递给选校帝服务器。**\n\n### 2.2、签名机制\n\n调用选校帝的对外接口时，需要对接口的参数进行签名，签名规则如下：\n\n**参与签名的数据：**\n\n- 接口参数（如果参数值不是基础数据类型，需要转换为 JSON 格式的字符串）\n- 随机字符串（noncestr），1 小时内不能重复（每个 appid 独立判断）\n- 当前时间（UNIX 毫秒数），与服务器时间差不能超过 10 分钟\n- secret\n\n**签名步骤：**\n\n1. 将参数按照参数名字典排序，并以 URLSearchParams 的规则（即：`key1=value1&key2=value2`，其中 key 与 value 均要进行 URL 编码）组成字符串 str1（如果接口没有参数，则 str1 为空字符串）\n2. 将 str1 与随机字符串、时间与 secret 用 `&` 拼接起来，得到 str2\n3. 对 str2 进行 sha256 哈希运算，并以 Base64 的格式输出，得到签名 signValue\n\n**签名的传递方式：**\n\n签名的相关数据以 HTTP Header 传输，相关 key 值如下：\n\n- `x-xxd-nonce` 传输参与签名的随机字符串（noncestr）\n- `x-xxd-timestamp` 传输参与签名的当前时间（UNIX 毫秒数）\n- `x-xxd-signature` 传输签名值（signValue）\n\n### 2.3、验签机制\n\n选校帝接口的响应头中会包括对响应值的签名，客户端可根据自身安全需求进行签名验证。\n\n签名生成算法与 2.2 中基本一致。\n\n**响应签名出现条件：**\n\n- 响应体为文本类型时\n\n**签名的传递方式：**\n\n响应的签名数据位于响应头部，有如下几个值：\n\n- `x-xxd-nonce` 参与响应签名的随机字符串（noncestr）\n- `x-xxd-timestamp` 参与响应签名的当前时间（UNIX 毫秒数）\n- `x-xxd-signature` 响应签名值（signValue）\n\n**验证签名的步骤：**\n\n- 根据响应中提供的 nonce 与 timestamp，对响应体内容进行签名（算法如下）\n- 对比生成的签名与响应中提供的签名值是否一致\n\n**生成签名的算法：**\n\n响应签名算法与请求参数签名相似，仅仅是去掉了由请求参数生成 str1 的过程（见 2.2 中的签名步骤）\n\n1. 将响应体与随机字符串、时间与 secret 用 `&` 拼接起来，得到 str\n2. 对 str 进行 sha256 哈希运算，并以 Base64 的格式输出，得到签名 signValue\n\n## 附录 A：签名数据示例\n\n如果签名算法的实现，针对下面这一组数据可以生成同样的结果，则可以认为签名算法是正确的\n\n数据：\n\n- **appid** = `"exgNUaWvOXyEVvJr"`\n- **secret** = `D0oa6poVh+dcN6AZ9otBVAyLt70u55QC`\n- **params** = `{ "keywords": "哈佛大学" }`\n- **nonce** = `"t//rEXBfazWcPcbEgO6WfA=="`\n- **timestamp** = `1571744890063`\n\n期望结果：`8WOhZ+qD57gg2/O/jf0b1dVUh6hIEJ+M52vGm500Ejk=`\n\n## 附录 B：代码示例\n\n### 签名函数的代码示例（Node.js）\n\n```js\n/* eslint-disable no-console */\nconst crypto = require("crypto");\n\nclass SignUtils {\n  constructor(appid, secret) {\n    this.appid = appid;\n    this.secret = secret;\n  }\n\n  /**\n   * 对字符串进行签名\n   * @param {string} str 要签名的字符串\n   * @param {string} nonce 随机字符串\n   * @param {number} timestamp UNIX毫秒数\n   */\n  signString(str, nonce, timestamp) {\n    // 拼接签名所需数据\n    const str2 = [\n      str,\n      encodeURIComponent(nonce),\n      encodeURIComponent(String(timestamp)),\n      encodeURIComponent(this.secret)\n    ].join("&");\n\n    // 生成哈希值\n    return crypto\n      .createHash("sha256")\n      .update(str2)\n      .digest("base64");\n  }\n\n  /**\n   * 对参数集合进行签名\n   * @param {object} params 参数集合\n   * @param {string} nonce 随机字符串\n   * @param {number} timestamp UNIX毫秒数\n   */\n  signParams(params, nonce, timestamp) {\n    // 根据参数生成字符串\n    const keys = Object.keys(params).sort();\n    const entries = keys\n      .map(key => [key, wrapValue(params[key])])\n      .filter(entry => entry[1] != null);\n    const str1 = entries\n      .map(\n        ([key, value]) =>\n          `${encodeURIComponent(key)}=${encodeURIComponent(value)}`\n      )\n      .join("&");\n\n    // 对生成的字符串签名\n    return this.signString(str1, nonce, timestamp);\n  }\n}\n\nfunction wrapValue(value) {\n  // 如果参数为null/undefined或者文件，忽略该参数（返回null）\n  if (value == null) {\n    return null;\n  }\n  // 否则一定返回字符串\n\n  // 如果是对象类型（包括数组），用JSON转字符串\n  if (typeof value === "object") {\n    return JSON.stringify(value);\n  }\n  // 否则（基础类型），直接转字符串\n  return String(value);\n}\n```\n',
              children: [
                {
                  link: '/articles/coop_spec.md#文档版本',
                  title: '文档版本',
                  content: [
                    '当前版本：v1.1.0',
                    '版本号 编辑人 编辑内容 v0.0.1 林康 增加了接口数据传输方式的文档；增加了接口签名相关文档和示例代码。 v1.0.0 林康 正式发布文档（无内容变化） v1.1.0 林康 添加验签部分的文档；调整附录代码',
                    '版本号说明： 版本号遵循语义化版本规范，由 Major (A), Minor (B), Patch (C) 三部分组成。 A=0 的版本为预览版，文档已有内容极可能会变化，仅供参考。 A>0 时，仅修改已有内容的问题增加 C，添加新的内容则增加 B，增加了和之前文档不兼容的内容增加 A。',
                  ],
                },
                {
                  link: '/articles/coop_spec.md#目录',
                  title: '目录',
                  content: ['[TOC]'],
                },
                {
                  link: '/articles/coop_spec.md#1、接口数据传输方式',
                  title: '1、接口数据传输方式',
                  content: [
                    '请求参数：',
                    'GET 请求的参数使用请求地址中的 query 部分传递。',
                    'POST 请求的参数使用请求体传输（支持 application/json 与 application/x-www-form-urlencoded 格式）',
                    '请求响应结构：',
                    '接口响应均为 application/json 类型（除非遇到网关级别的错误）',
                    '正常返回的响应结构：',
                    '{ "code": 0, // 状态码，成功时一定返回0 "data": ... // 结果数据，根据接口不同有不同结构 }',
                    '错误返回的响应结构：',
                    '{ "code": "SCHOOL_4", // 状态码，出错时一定是字符串 "msg": "参数错误" // 错误提示 }',
                  ],
                },
                {
                  link: '/articles/coop_spec.md#2、合作方身份标识与签名机制',
                  title: '2、合作方身份标识与签名机制',
                  content: [
                    '2.1、合作方的身份标识',
                    '每个合作方都分配一对密码（appid 与 secret）',
                    'appid 是合作方的身份标识，需要在鉴权时提供给选校帝接口 secret 是合作方的密钥，不通过接口传输，仅参与签名等内部运算',
                    '注：key 需要在调用接口时由请求头 x-xxd-appid 传递给选校帝服务器。',
                    '2.2、签名机制',
                    '调用选校帝的对外接口时，需要对接口的参数进行签名，签名规则如下：',
                    '参与签名的数据：',
                    '接口参数（如果参数值不是基础数据类型，需要转换为 JSON 格式的字符串） 随机字符串（noncestr），1 小时内不能重复（每个 appid 独立判断） 当前时间（UNIX 毫秒数），与服务器时间差不能超过 10 分钟 secret',
                    '签名步骤：',
                    '将参数按照参数名字典排序，并以 URLSearchParams 的规则（即：key1=value1&key2=value2，其中 key 与 value 均要进行 URL 编码）组成字符串 str1（如果接口没有参数，则 str1 为空字符串） 将 str1 与随机字符串、时间与 secret 用 & 拼接起来，得到 str2 对 str2 进行 sha256 哈希运算，并以 Base64 的格式输出，得到签名 signValue',
                    '签名的传递方式：',
                    '签名的相关数据以 HTTP Header 传输，相关 key 值如下：',
                    'x-xxd-nonce 传输参与签名的随机字符串（noncestr） x-xxd-timestamp 传输参与签名的当前时间（UNIX 毫秒数） x-xxd-signature 传输签名值（signValue）',
                    '2.3、验签机制',
                    '选校帝接口的响应头中会包括对响应值的签名，客户端可根据自身安全需求进行签名验证。',
                    '签名生成算法与 2.2 中基本一致。',
                    '响应签名出现条件：',
                    '响应体为文本类型时',
                    '签名的传递方式：',
                    '响应的签名数据位于响应头部，有如下几个值：',
                    'x-xxd-nonce 参与响应签名的随机字符串（noncestr） x-xxd-timestamp 参与响应签名的当前时间（UNIX 毫秒数） x-xxd-signature 响应签名值（signValue）',
                    '验证签名的步骤：',
                    '根据响应中提供的 nonce 与 timestamp，对响应体内容进行签名（算法如下） 对比生成的签名与响应中提供的签名值是否一致',
                    '生成签名的算法：',
                    '响应签名算法与请求参数签名相似，仅仅是去掉了由请求参数生成 str1 的过程（见 2.2 中的签名步骤）',
                    '将响应体与随机字符串、时间与 secret 用 & 拼接起来，得到 str 对 str 进行 sha256 哈希运算，并以 Base64 的格式输出，得到签名 signValue',
                  ],
                },
                {
                  link: '/articles/coop_spec.md#附录-a：签名数据示例',
                  title: '附录 A：签名数据示例',
                  content: [
                    '如果签名算法的实现，针对下面这一组数据可以生成同样的结果，则可以认为签名算法是正确的',
                    '数据：',
                    'appid = "exgNUaWvOXyEVvJr" secret = D0oa6poVh+dcN6AZ9otBVAyLt70u55QC params = { "keywords": "哈佛大学" } nonce = "t//rEXBfazWcPcbEgO6WfA==" timestamp = 1571744890063',
                    '期望结果：8WOhZ+qD57gg2/O/jf0b1dVUh6hIEJ+M52vGm500Ejk=',
                  ],
                },
                {
                  link: '/articles/coop_spec.md#附录-b：代码示例',
                  title: '附录 B：代码示例',
                  content: [
                    '签名函数的代码示例（Node.js）',
                    '/* eslint-disable no-console */ const crypto = require("crypto"); class SignUtils { constructor(appid, secret) { this.appid = appid; this.secret = secret; } /** * 对字符串进行签名 * @param {string} str 要签名的字符串 * @param {string} nonce 随机字符串 * @param {number} timestamp UNIX毫秒数 */ signString(str, nonce, timestamp) { // 拼接签名所需数据 const str2 = [ str, encodeURIComponent(nonce), encodeURIComponent(String(timestamp)), encodeURIComponent(this.secret) ].join("&"); // 生成哈希值 return crypto .createHash("sha256") .update(str2) .digest("base64"); } /** * 对参数集合进行签名 * @param {object} params 参数集合 * @param {string} nonce 随机字符串 * @param {number} timestamp UNIX毫秒数 */ signParams(params, nonce, timestamp) { // 根据参数生成字符串 const keys = Object.keys(params).sort(); const entries = keys .map(key => [key, wrapValue(params[key])]) .filter(entry => entry[1] != null); const str1 = entries .map( ([key, value]) => `${encodeURIComponent(key)}=${encodeURIComponent(value)}` ) .join("&"); // 对生成的字符串签名 return this.signString(str1, nonce, timestamp); } } function wrapValue(value) { // 如果参数为null/undefined或者文件，忽略该参数（返回null） if (value == null) { return null; } // 否则一定返回字符串 // 如果是对象类型（包括数组），用JSON转字符串 if (typeof value === "object") { return JSON.stringify(value); } // 否则（基础类型），直接转字符串 return String(value); }',
                  ],
                },
              ],
            },
            {
              link: '/articles/data_ops.md',
              title: '数据操作文档',
              content: [],
              markdown:
                '# 数据操作文档\n\n## 排名抓取指南（迁木网）\n\n1. 执行 `bin/shell/download_school_data.js` 下载最新学校数据\n2. 在 `bin/data_process/tmp/fetch_list.txt` 中填写要抓取的页面地址（一行一个）\n3. 执行 `bin/data_process/rankinfo_fetch.js` 抓取页面重的排名\n4. 检查 `bin/data_process/tmp/fetched.json` 的内容，并手动修改不正确的部分（至少保证每个排名前100（重要排名前200，专业排名前20）的学校数据正确）\n\n## 排名更新操作指南\n\n> ⚠️ 注意：务必为每个命令设置环境变量 `NODE_ENV`，保证所操作的数据环境正确\n\n1. 准备以下结构的JSON格式的排名数据，保存为 `bin/data_process/tmp/fetched.json`\n    ```json\n    [\n      {\n        "year": 2019, // 排名年份\n        "type": "USNEWS", // 排名机构（有既定名称约定）\n        "title": "世界大学排名", // 排名名称\n        "isWorldRank": true, // 是否世界排名\n        "isMajorRank": false, // 是否专业排名\n        "rank": 421920, // 排名初始优先级（有既定算法）\n        "schools": [ // 排名中的学校数据\n          {\n            "rank": "1", // 学校排名（可以是如下格式：`500`，`501+`，`501-1000`，`RNP`（排名未公开），`Unranked`（未给予排名））\n            "schoolId": 4, // 学校ID，可以为null，务必保证这个字段正确，并尽可能少的null（数据库学校表中的）\n            "chineseName": "哈佛大学", // 学校中文名\n            "englishName": "Harvard University", // 学校英文名（或外文名）\n            "rankValue": 1 // 学校排名的数字值（不精确排名取最小值，无法取值可置为null）\n          }\n        ]\n      }\n    ]\n    ```\n\n2. 执行 `bin/shell/download_school_data.js` 下载最新学校数据\n3. 执行 `bin/shell/download_rank_name_map.js` 下载最新排名名称映射\n4. 执行 `bin/data_process/rankinfo_import.js` 将排名导入数据库\n5. 执行 `bin/data_process/rankinfo_fix.js` 整理排名数据\n6. 执行 `bin/data_process/rankorder_update.js` 更新排名优先级\n7. 执行 `bin/data_process/extract_rank.js` 更新学校排名字段\n8. 请求以下接口，更新排名目录缓存\n    ```\n    GET /rank/categories/web/index?refresh=true\n    GET /rank/categories/index?refresh=true&version=2\n    ```\n\n## 更新XML数据\n\n1. 生成新的XML文件：\n    ```bash\n    node bin/shell/download_school_data.js # 先下载最新的学校数据到本地\n    node bin/generator/baidu/application_card_v2 # 百度申请卡片\n    node bin/generator/baidu/export_data/index.js # 百度院校页面数据\n    node bin/generator/baidu/ranking_card_v2 # 百度排名卡片\n    node bin/generator/baidu/school_card/index.js # 百度院校卡片\n    node bin/generator/baidu/school_tabs/index.js # 百度院校卡片TABS\n    node bin/generator/baidu/xzh_service/index.js # 百度服务控件数据\n    node bin/generator/sogou/ranks.js # 搜狗排名卡片\n    node bin/generator/sogou/sogou_all_school.js # 搜狗院校卡片\n    ```\n2. 上传新的XML文件到OSS中（查找git中有变化的文件，找到并替换OSS中现有文件即可）\n3. 可能需要去百度的后台提交一下更新\n',
              children: [
                {
                  link: '/articles/data_ops.md#排名抓取指南（迁木网）',
                  title: '排名抓取指南（迁木网）',
                  content: [
                    '执行 bin/shell/download_school_data.js 下载最新学校数据 在 bin/data_process/tmp/fetch_list.txt 中填写要抓取的页面地址（一行一个） 执行 bin/data_process/rankinfo_fetch.js 抓取页面重的排名 检查 bin/data_process/tmp/fetched.json 的内容，并手动修改不正确的部分（至少保证每个排名前100（重要排名前200，专业排名前20）的学校数据正确）',
                  ],
                },
                {
                  link: '/articles/data_ops.md#排名更新操作指南',
                  title: '排名更新操作指南',
                  content: [
                    '⚠️ 注意：务必为每个命令设置环境变量 NODE_ENV，保证所操作的数据环境正确',
                    '准备以下结构的JSON格式的排名数据，保存为 bin/data_process/tmp/fetched.json [ { "year": 2019, // 排名年份 "type": "USNEWS", // 排名机构（有既定名称约定） "title": "世界大学排名", // 排名名称 "isWorldRank": true, // 是否世界排名 "isMajorRank": false, // 是否专业排名 "rank": 421920, // 排名初始优先级（有既定算法） "schools": [ // 排名中的学校数据 { "rank": "1", // 学校排名（可以是如下格式：`500`，`501+`，`501-1000`，`RNP`（排名未公开），`Unranked`（未给予排名）） "schoolId": 4, // 学校ID，可以为null，务必保证这个字段正确，并尽可能少的null（数据库学校表中的） "chineseName": "哈佛大学", // 学校中文名 "englishName": "Harvard University", // 学校英文名（或外文名） "rankValue": 1 // 学校排名的数字值（不精确排名取最小值，无法取值可置为null） } ] } ] 执行 bin/shell/download_school_data.js 下载最新学校数据 执行 bin/shell/download_rank_name_map.js 下载最新排名名称映射 执行 bin/data_process/rankinfo_import.js 将排名导入数据库 执行 bin/data_process/rankinfo_fix.js 整理排名数据 执行 bin/data_process/rankorder_update.js 更新排名优先级 执行 bin/data_process/extract_rank.js 更新学校排名字段 请求以下接口，更新排名目录缓存 GET /rank/categories/web/index?refresh=true GET /rank/categories/index?refresh=true&version=2',
                  ],
                },
                {
                  link: '/articles/data_ops.md#更新xml数据',
                  title: '更新XML数据',
                  content: [
                    '生成新的XML文件： node bin/shell/download_school_data.js # 先下载最新的学校数据到本地 node bin/generator/baidu/application_card_v2 # 百度申请卡片 node bin/generator/baidu/export_data/index.js # 百度院校页面数据 node bin/generator/baidu/ranking_card_v2 # 百度排名卡片 node bin/generator/baidu/school_card/index.js # 百度院校卡片 node bin/generator/baidu/school_tabs/index.js # 百度院校卡片TABS node bin/generator/baidu/xzh_service/index.js # 百度服务控件数据 node bin/generator/sogou/ranks.js # 搜狗排名卡片 node bin/generator/sogou/sogou_all_school.js # 搜狗院校卡片 上传新的XML文件到OSS中（查找git中有变化的文件，找到并替换OSS中现有文件即可） 可能需要去百度的后台提交一下更新',
                  ],
                },
              ],
            },
            {
              link: '/articles/socket.io.md',
              title: 'Socket.io文档',
              content: [],
              markdown:
                '# Socket.io文档\n\n## Namespace: /qrcode/login\n\n### 客户端接收事件\n\n```yaml\n- event: "show-qrcode" # 显示二维码的数据\n  data:\n    token: string # qrcode-token\n- event: "login" # 通知显示二维码的端登录\n  data:\n    token: string # login-token\n```\n\n### 客户端发送事件\n\n暂无',
              children: [
                {
                  link: '/articles/socket.io.md#namespace-qrcodelogin',
                  title: 'Namespace: /qrcode/login',
                  content: [
                    '客户端接收事件',
                    '- event: "show-qrcode" # 显示二维码的数据 data: token: string # qrcode-token - event: "login" # 通知显示二维码的端登录 data: token: string # login-token',
                    '客户端发送事件',
                    '暂无',
                  ],
                },
              ],
            },
          ],
        },
        {
          prefix: 'drafts',
          list: [
            {
              link: '/articles/drafts/service_order.md',
              title: '解决方案第三迭代接口设计',
              content: [
                '解决方案第三迭代接口设计 改动记录 服务订单设计 服务订单状态设计 服务订单表结构设计 服务订单接口设计 学生端：我的服务订单列表（我的方案） 学生端：服务订单详情 学生端：确认下单 学生端：删除订单 学生端：预约详情中增加方案信息 学生端：发起预约时增加方案 ID 参数 管理端：订单列表 管理端：撤销订单 管理端：恢复订单 管理端：编辑管理备注 我的学生（互动）设计 我的学生基本设计 我的学生表结构设计 我的学生接口设计 我的学生：待处理列表 我的学生：服务中列表 我的学生：全部列表 我的学生：互动详情（互动记录、服务等） 我的学生：确认订单 我的学生：结束服务 我的学生：编辑沟通备忘录',
              ],
              markdown:
                '# 解决方案第三迭代接口设计\n\n- [解决方案第三迭代接口设计](#解决方案第三迭代接口设计)\n  - [改动记录](#改动记录)\n  - [服务订单设计](#服务订单设计)\n    - [服务订单状态设计](#服务订单状态设计)\n    - [服务订单表结构设计](#服务订单表结构设计)\n    - [服务订单接口设计](#服务订单接口设计)\n      - [学生端：我的服务订单列表（我的方案）](#学生端我的服务订单列表我的方案)\n      - [学生端：服务订单详情](#学生端服务订单详情)\n      - [学生端：确认下单](#学生端确认下单)\n      - [学生端：删除订单](#学生端删除订单)\n      - [学生端：预约详情中增加方案信息](#学生端预约详情中增加方案信息)\n      - [学生端：发起预约时增加方案 ID 参数](#学生端发起预约时增加方案-id-参数)\n      - [管理端：订单列表](#管理端订单列表)\n      - [管理端：撤销订单](#管理端撤销订单)\n      - [管理端：恢复订单](#管理端恢复订单)\n      - [管理端：编辑管理备注](#管理端编辑管理备注)\n  - [我的学生（互动）设计](#我的学生互动设计)\n    - [我的学生基本设计](#我的学生基本设计)\n    - [我的学生表结构设计](#我的学生表结构设计)\n    - [我的学生接口设计](#我的学生接口设计)\n      - [我的学生：待处理列表](#我的学生待处理列表)\n      - [我的学生：服务中列表](#我的学生服务中列表)\n      - [我的学生：全部列表](#我的学生全部列表)\n      - [我的学生：互动详情（互动记录、服务等）](#我的学生互动详情互动记录服务等)\n      - [我的学生：确认订单](#我的学生确认订单)\n      - [我的学生：结束服务](#我的学生结束服务)\n      - [我的学生：编辑沟通备忘录](#我的学生编辑沟通备忘录)\n\n## 改动记录\n\n- 服务订单增加 `appointTime` 表示预约时间，且表结构那边增加了几个时间的注释。\n- 修改了 `canReview` 的条件\n- 删除了订单的 `planSetId`, `planSetSnapshot` 字段，增加 `planSnapshot` 字段\n\n## 服务订单设计\n\n**服务订单（Service Order）** 表示用户与方案套餐的关系，每次用户针对套餐创建咨询预约时，同时创建一个状态为咨询中的服务订单。\n\n### 服务订单状态设计\n\n```mermaid\nstateDiagram\n  APPOINTED: 已预约咨询\n  SUBMITTED: 学生已下单，待确认\n  SERVING: 老师已确认，服务中\n  COMPLETED: 服务结束\n  ABORTED: 用户已撤销\n  REVOKED: 后台已撤销\n\n  [*] --> APPOINTED: 学生针对方案发起咨询\n  APPOINTED --> SUBMITTED: 学生确认下单\n  SUBMITTED --> SERVING: 老师确认订单\n  SERVING --> COMPLETED: 老师结束服务\n\n  APPOINTED --> ABORTED: 学生删除订单\n\n  SUBMITTED --> REVOKED: 后台撤销订单\n  SERVING --> REVOKED: 后台撤销订单\n  REVOKED --> SUBMITTED: 后台恢复订单\n```\n\n![image](/uploads/cad2b21833ea8aadffb4a5e95aa1ff3e/image.png)\n\n注：\n\n- 学生下单需要满足前置条件：相关预约已经处于已联系或后续成功状态\n\n```ts\nenum SERVICE_ORDER_STATUS {\n  APPOINTED = 1, // 已预约咨询\n  SUBMITTED = 2, // 学生已下单，待确认\n  SERVING = 3, // 老师已确认，服务中\n  COMPLETED = 4, // 服务结束\n  ABORTED = 5, // 用户已撤销\n  REVOKED = 6 // 后台已撤销\n}\nconst SERVICE_ORDER_STATUS_TEXT = {\n  [SERVICE_ORDER_STATUS.APPOINTED]: "咨询中",\n  [SERVICE_ORDER_STATUS.SUBMITTED]: "已下单，待确认",\n  [SERVICE_ORDER_STATUS.SERVING]: "服务中",\n  [SERVICE_ORDER_STATUS.COMPLETED]: "服务结束",\n  [SERVICE_ORDER_STATUS.ABORTED]: "订单已关闭",\n  [SERVICE_ORDER_STATUS.REVOKED]: "订单已关闭"\n};\n```\n\n### 服务订单表结构设计\n\n```ts\ninterface ThirdPartyServiceOrder {\n  id: integer.autoIncrement.primaryKey;\n  userId: integer.notNull;\n  planId: integer.notNull;\n  planSnapshot: json.notNull;\n  appointmentId: integer; // 下个版本可能会直接发起订单，这里允许空值\n  status: integer.notNull; // 状态，枚举值\n  createTime: timestamptz.notNull.defaultValue<"now">;\n  appointTime: timestamptz; // 预约时间\n  submitTime: timestamptz; // 下单时间\n  confirmTime: timestamptz; // 确认时间\n  completeTime: timestamptz; // 结束时间\n  revokeTime: timestamptz; // 关闭时间\n  abortTime: timestamptz; // 关闭时间\n  abortReason: text;\n  adminNote: text; // 管理备注\n}\n```\n\n### 服务订单接口设计\n\n#### 学生端：我的服务订单列表（我的方案）\n\n```http\nGET /thirdparty/service_order/list/mine\n```\n\n参数：无\n\n响应：\n\n```ts\ninterface Response {\n  code: 0;\n  data: [\n    {\n      id: number;\n      typeName: string;\n      status: number;\n      statusText: string;\n      appointmentId?: number;\n      canDelete: boolean; // 是否可以删除方案\n      canOrder: boolean; // 是否可以确认下单\n      canReview: boolean; // 是否可以评价咨询\n      isActive: boolean; // 是否有效（用于区分已失效）\n      planSnapshot: {\n        // 方案\n        id: number;\n        name: string;\n        coverUrl: string;\n      };\n      lastActionTime: string; // 最后操作的时间，如「预约时间：2018-04-26 12:12」\n    }\n  ];\n}\n```\n\n注：\n\n- canDelete = 未下单\n- canOrder = 老师将预约状态改为了已联系\n- canReview = 预约的 `status !== CANCELLED && reviewInvited && !reviewed`\n\n#### 学生端：服务订单详情\n\n```http\nGET /thirdparty/service_order/item\n```\n\n注意：\n\n- 只能获取自己的订单\n  - 未登录提示登录\n  - 找不到或者不是自己的给出相应的错误类型\n- 发起预约时需要加上方案 ID（`planId`）\n- 预约按钮文案改为 `预约咨询XXX套餐`（需要明确表示咨询的是套餐，而不是方案）\n- 时间轴提供的逻辑：\n  - 固定的 4 个步骤，每个步骤时间和是否完成根据实际情况去填充\n  - 状态为 ABORTED,REVOKED 时，仅展示已完成步骤，外加一个取消的步骤\n\n参数：\n\n- **id**: _number_ - 服务订单 ID\n\n响应：\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    id: number;\n    typeName: string;\n    status: number;\n    statusText: string;\n    appointmentId?: number;\n    canDelete: boolean; // 是否可以删除方案\n    canOrder: boolean; // 是否可以确认下单\n    canReview: boolean; // 是否可以评价咨询\n    planSnapshot: {\n      // 方案\n      id: number;\n      name: string;\n      coverUrl: string;\n    };\n    timeline: [\n      // 时间轴\n      {\n        action: string;\n        done: boolean;\n        time?: string;\n      }\n    ];\n  };\n}\n```\n\n#### 学生端：确认下单\n\n```http\nPOST /thirdparty/service_order/item/submit\n```\n\n参数：\n\n- **id**: _number_ - 服务订单 ID\n\n注：\n\n- 将服务订单状态标记为已下单，同时设置 `submitTime`\n- 给对应套餐的提供老师发送 APP 推送\n\n#### 学生端：删除订单\n\n```http\nPOST /thirdparty/service_order/item/abort\n```\n\n参数：\n\n- **id**: _number_ - 服务订单 ID\n- **abortReason**: _string_ - 删除原因\n\n注：\n\n- 需要设置 `abortTime`\n- 删除订单时，如果相关预约的状态为未联系，则同时取消预约\n- 需要给老师推送\n\n#### 学生端：预约详情中增加方案信息\n\n```ts\ninterface AppointmentItem {\n  // ...\n  plan: {\n    id: number;\n    name: string;\n    coverTag: string;\n    marketTags: string[];\n    coverUrl: string;\n    hasVideo: boolean;\n  };\n  // ...\n}\n```\n\n#### 学生端：发起预约时增加方案 ID 参数\n\n参数：\n\n- **planId**: _number_ - 方案 ID\n\n注意：\n\n- 当发起咨询时带有 `planId` 时\n  - 需要验证方案是否上线\n  - 创建咨询的同时，创建一个服务订单\n\n#### 管理端：订单列表\n\n```http\nGET /thirdparty/service_order/list/admin\n```\n\n注：\n\n- 获取老师选项数据的接口增加 `hasServiceOrder` 参数，用于只获取有订单的老师\n\n参数：\n\n- **status**: _number_ - 按订单状态筛选\n- **consultantId**: _number_ - 按服务老师筛选\n- **createdAfter**: _Date_ - 按创建时间筛选\n- **createdBefore**: _Date_ - 按创建时间筛选\n\n响应：\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    pagination: {\n      page: number;\n      pageSize: number;\n      count: number;\n    };\n    data: [\n      {\n        id: number;\n        status: number;\n        user: {\n          id: number;\n          name: string;\n          avatar: string;\n        };\n        consultant: {\n          id: number;\n          realName: string;\n          avatar: string;\n        };\n        planSnapshot: {\n          id: number;\n          name: string;\n          coverUrl: string;\n        };\n        createTime: Date;\n        adminNote: string;\n        appointmentId: number;\n        appointmentReviewText: string;\n        appointTime: Date;\n        submitTime: Date;\n        confirmTime: Date;\n        completeTime: Date;\n        revokeTime: Date;\n        abortTime: Date;\n      }\n    ];\n  };\n}\n```\n\n#### 管理端：撤销订单\n\n```http\nPOST /thirdparty/service_order/item/revoke\n```\n\n参数：\n\n- **id**: _number_ - 服务订单 ID\n\n注：\n\n- 只能在 SUBMITTED / SERVING 状态中操作\n- 需要设置 `revokeTime`\n- 需要给学生/老师推送\n\n#### 管理端：恢复订单\n\n```http\nPOST /thirdparty/service_order/item/revoke/revert\n```\n\n参数：\n\n- **id**: _number_ - 服务订单 ID\n\n注：\n\n- 只能在 REVOKED 状态下操作\n- 将状态设为 SUBMITTED\n- 清除 `revokeTime`, `confirmTime`\n- 重新设置 `submitTime`\n- 需要给学生/老师推送\n\n#### 管理端：编辑管理备注\n\n```http\nPUT /thirdparty/service_order/item/admin_note\n```\n\n参数：\n\n- **id**: _number_ - 服务订单 ID\n- **adminNote**: _string_ - 管理备注内容\n\n## 我的学生（互动）设计\n\n### 我的学生基本设计\n\n新增概念：互动（interaction），表示教师与学生 1:1 的关系。\n\n一个互动包括：\n\n- 相关学生一名\n- 相关教师一名\n- 初次互动时间（仅在创建时计算即可）\n- 最新互动时间\n- 互动\n  - 问答：分配给我的 + 我回答过的\n  - 追问：追问我的\n  - 预约：预约我的\n  - 订单：关于我的套餐的\n- 待处理状态（布尔值，有任何未处理预约、分配未回答问题、未处理预约）\n- 服务中状态（布尔值，有任何已下单未结束服务订单）\n\n状态更新逻辑：\n\n- 更新待处理状态、最新互动时间、互动项目的 ID 数组\n\n  - 产生新的追问时\n  - 分配新的问题时\n  - 发起新的预约时\n  - 老师回答问题/追问时\n  - 老师修改预约状态时\n  - 每 5 分钟刷新一次活跃的（最新互动时间在 15 分钟内的）\n  - 每 1 小时刷新一次非活跃的（最新时间在 15 分钟外的，包括尚未创建条目的）\n\n- 更新服务订单状态\n  - 用户确认下单时，设为服务中\n  - 服务订单状态改变时，刷新服务中状态\n  - 每 5 分钟刷新一次活跃数据的待处理状态\n  - 每 1 小时刷新一次非活跃数据的待处理状态\n\n### 我的学生表结构设计\n\n```ts\ninterface ThirdPartyInteraction {\n  id: integer.autoIncrement.primaryKey;\n  userId: integer.notNull;\n  consultantId: integer.notNull;\n  createTime: timestamptz.notNull.default<"now">;\n  // 最新互动时间\n  updateTime: timestamptz.notNull.default<"now">;\n  // 是否待处理\n  isPending: boolean.notNull.default<false>;\n  // 是否服务中\n  isServing: boolean.notNull.default<false>;\n  // 问题ID数组\n  questionIds: integer[].notNull.default<[]>;\n  // 追问ID数组\n  subQuestionIds: integer[].notNull.default<[]>;\n  // 预约ID数组\n  appointmentIds: integer[].notNull.default<[]>;\n  // 服务订单数组\n  serviceOrderIds: integer[].notNull.default<[]>;\n  // 有未处理的问题\n  hasPendingQuestions: boolean.notNull.default<false>;\n  // 有未处理的追问\n  hasPendingSubQuestions: boolean.notNull.default<false>;\n  // 沟通备忘录\n  contactNote: string;\n}\n```\n\n### 我的学生接口设计\n\n#### 我的学生：待处理列表\n\n```http\nGET /thirdparty/interaction/list/pending\n```\n\n参数：\n\n- **page**: _number_\n- **pageSize**: _number_\n\n响应：\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    pagination: {\n      page: number;\n      pageSize: number;\n      count: number;\n    };\n    meta: {\n      totalPendingCount: number;\n    };\n    data: [\n      {\n        id: number; // 互动ID（不需要用）\n        user: {\n          id: number;\n          name: string;\n          avatar: string;\n        };\n        hasPendingQuestions: boolean; // 有追问未处理\n        hasPendingSubQuestions: boolean; // 有问题未处理\n        appointments: [\n          {\n            id: number; // 预约ID\n            appointmentTime: Date; // 预约时间\n            appointmentTimeText: string; // 预约时间（文本表示）\n            consultantRead: boolean; // 老师已读\n            isPlanRelated: boolean; // 和方案相关\n          }\n        ];\n        hasPlanRelatedAppointments: boolean; // 是否有方案相关的预约\n        hasUnreadAppointments: boolean; // 是否有未读的预约\n      }\n    ];\n  };\n}\n```\n\n#### 我的学生：服务中列表\n\n```http\nGET /thirdparty/interaction/list/serving\n```\n\n参数：\n\n- **page**: _number_\n- **pageSize**: _number_\n\n响应：\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    pagination: {\n      page: number;\n      pageSize: number;\n      count: number;\n    };\n    meta: {\n      totalPendingCount: number;\n    };\n    data: [\n      {\n        id: number; // 互动ID（不需要用）\n        user: {\n          id: number;\n          name: string;\n          avatar: string;\n        };\n        serviceOrders: [\n          {\n            id: number; // 服务订单ID\n            status: number;\n            statusText: string;\n            planSnapshot: {\n              // 方案\n              id: number;\n              name: string;\n              coverUrl: string;\n            };\n          }\n        ];\n      }\n    ];\n  };\n}\n```\n\n#### 我的学生：全部列表\n\n```http\nGET /thirdparty/interaction/list/all\n```\n\n参数：\n\n- **page**: _number_\n- **pageSize**: _number_\n\n响应：\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    pagination: {\n      page: number;\n      pageSize: number;\n      count: number;\n    };\n    meta: {\n      totalPendingCount: number;\n    };\n    data: [\n      {\n        id: number; // 互动ID（不需要用）\n        user: {\n          id: number;\n          name: string;\n          avatar: string;\n        };\n        appointmentCount: number;\n        questionCount: number;\n        subQuestionCount: number;\n        serviceOrderCount: number;\n      }\n    ];\n  };\n}\n```\n\n#### 我的学生：互动详情（互动记录、服务等）\n\n```http\nGET /thirdparty/interaction/user\n```\n\n参数：\n\n- **userId**: _number_ - 用户 ID\n\n响应：\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    user: {\n      id: number;\n      name: string;\n      avatar: string;\n    };\n    appointments: [\n      {\n        id: number; // 预约ID\n        appointmentTime: Date; // 预约时间\n        appointmentTimeText: string; // 预约时间（文本表示）\n        consultantRead: boolean; // 老师已读\n        isPlanRelated: boolean; // 和方案相关\n        status: number; // 预约状态\n      }\n    ];\n    questions: [\n      {\n        id: number; // 问题ID\n        content: string; // 问题内容\n        createTime: Date; // 提问时间\n        createTimeText: string; // 提问时间（文本表示）\n        // 下面五个用于展示标签\n        locationProvince: string;\n        locationCity: string;\n        schoolName: string;\n        targetCountryName: string;\n        targetDegreeName: string;\n        subQuestionCount: number;\n      }\n    ];\n    serviceOrders: [\n      {\n        id: number;\n        typeName: string;\n        status: number;\n        statusText: string;\n        isActive: boolean; // 是否有效（用于区分已失效）\n        planSnapshot: {\n          // 方案\n          id: number;\n          name: string;\n          coverUrl: string;\n        };\n        lastActionTime: string; // 最后操作的时间，如「预约时间：2018-04-26 12:12」\n      }\n    ];\n    userData: {\n      // 用户画像，和预约里面一样\n      // ...\n    };\n    contactNote: string; // 沟通备忘录\n  };\n}\n```\n\n#### 我的学生：确认订单\n\n```http\nPOST /thirdparty/service_order/confirm\n```\n\n参数：\n\n- **id**: _number_ - 服务订单 ID\n\n注：\n\n- 只能在待确认状态操作\n- 需要设置 `confirmTime`\n- 需要给老师推送\n\n#### 我的学生：结束服务\n\n```http\nPOST /thirdparty/service_order/complete\n```\n\n参数：\n\n- **id**: _number_ - 服务订单 ID\n\n注：\n\n- 只能在服务中状态操作\n- 需要设置 `completeTime`\n- 需要给老师推送\n\n#### 我的学生：编辑沟通备忘录\n\n```http\nPUT /thirdparty/interaction/user/contact_note\n```\n\n参数：\n\n- **userId**: _number_ - 用户 ID\n- **contactNote**: _number_ - 沟通备忘录内容\n',
              children: [
                {
                  link: '/articles/drafts/service_order.md#改动记录',
                  title: '改动记录',
                  content: [
                    '服务订单增加 appointTime 表示预约时间，且表结构那边增加了几个时间的注释。 修改了 canReview 的条件 删除了订单的 planSetId, planSetSnapshot 字段，增加 planSnapshot 字段',
                  ],
                },
                {
                  link: '/articles/drafts/service_order.md#服务订单设计',
                  title: '服务订单设计',
                  content: [
                    '服务订单（Service Order） 表示用户与方案套餐的关系，每次用户针对套餐创建咨询预约时，同时创建一个状态为咨询中的服务订单。',
                    '服务订单状态设计',
                    'stateDiagram APPOINTED: 已预约咨询 SUBMITTED: 学生已下单，待确认 SERVING: 老师已确认，服务中 COMPLETED: 服务结束 ABORTED: 用户已撤销 REVOKED: 后台已撤销 [*] --> APPOINTED: 学生针对方案发起咨询 APPOINTED --> SUBMITTED: 学生确认下单 SUBMITTED --> SERVING: 老师确认订单 SERVING --> COMPLETED: 老师结束服务 APPOINTED --> ABORTED: 学生删除订单 SUBMITTED --> REVOKED: 后台撤销订单 SERVING --> REVOKED: 后台撤销订单 REVOKED --> SUBMITTED: 后台恢复订单',
                    '',
                    '注：',
                    '学生下单需要满足前置条件：相关预约已经处于已联系或后续成功状态',
                    'enum SERVICE_ORDER_STATUS { APPOINTED = 1, // 已预约咨询 SUBMITTED = 2, // 学生已下单，待确认 SERVING = 3, // 老师已确认，服务中 COMPLETED = 4, // 服务结束 ABORTED = 5, // 用户已撤销 REVOKED = 6 // 后台已撤销 } const SERVICE_ORDER_STATUS_TEXT = { [SERVICE_ORDER_STATUS.APPOINTED]: "咨询中", [SERVICE_ORDER_STATUS.SUBMITTED]: "已下单，待确认", [SERVICE_ORDER_STATUS.SERVING]: "服务中", [SERVICE_ORDER_STATUS.COMPLETED]: "服务结束", [SERVICE_ORDER_STATUS.ABORTED]: "订单已关闭", [SERVICE_ORDER_STATUS.REVOKED]: "订单已关闭" };',
                    '服务订单表结构设计',
                    'interface ThirdPartyServiceOrder { id: integer.autoIncrement.primaryKey; userId: integer.notNull; planId: integer.notNull; planSnapshot: json.notNull; appointmentId: integer; // 下个版本可能会直接发起订单，这里允许空值 status: integer.notNull; // 状态，枚举值 createTime: timestamptz.notNull.defaultValue<"now">; appointTime: timestamptz; // 预约时间 submitTime: timestamptz; // 下单时间 confirmTime: timestamptz; // 确认时间 completeTime: timestamptz; // 结束时间 revokeTime: timestamptz; // 关闭时间 abortTime: timestamptz; // 关闭时间 abortReason: text; adminNote: text; // 管理备注 }',
                    '服务订单接口设计',
                    '学生端：我的服务订单列表（我的方案）',
                    'GET /thirdparty/service_order/list/mine',
                    '参数：无',
                    '响应：',
                    'interface Response { code: 0; data: [ { id: number; typeName: string; status: number; statusText: string; appointmentId?: number; canDelete: boolean; // 是否可以删除方案 canOrder: boolean; // 是否可以确认下单 canReview: boolean; // 是否可以评价咨询 isActive: boolean; // 是否有效（用于区分已失效） planSnapshot: { // 方案 id: number; name: string; coverUrl: string; }; lastActionTime: string; // 最后操作的时间，如「预约时间：2018-04-26 12:12」 } ]; }',
                    '注：',
                    'canDelete = 未下单 canOrder = 老师将预约状态改为了已联系 canReview = 预约的 status !== CANCELLED && reviewInvited && !reviewed',
                    '学生端：服务订单详情',
                    'GET /thirdparty/service_order/item',
                    '注意：',
                    '只能获取自己的订单 未登录提示登录 找不到或者不是自己的给出相应的错误类型 发起预约时需要加上方案 ID（planId） 预约按钮文案改为 预约咨询XXX套餐（需要明确表示咨询的是套餐，而不是方案） 时间轴提供的逻辑： 固定的 4 个步骤，每个步骤时间和是否完成根据实际情况去填充 状态为 ABORTED,REVOKED 时，仅展示已完成步骤，外加一个取消的步骤',
                    '参数：',
                    'id: number - 服务订单 ID',
                    '响应：',
                    'interface Response { code: 0; data: { id: number; typeName: string; status: number; statusText: string; appointmentId?: number; canDelete: boolean; // 是否可以删除方案 canOrder: boolean; // 是否可以确认下单 canReview: boolean; // 是否可以评价咨询 planSnapshot: { // 方案 id: number; name: string; coverUrl: string; }; timeline: [ // 时间轴 { action: string; done: boolean; time?: string; } ]; }; }',
                    '学生端：确认下单',
                    'POST /thirdparty/service_order/item/submit',
                    '参数：',
                    'id: number - 服务订单 ID',
                    '注：',
                    '将服务订单状态标记为已下单，同时设置 submitTime 给对应套餐的提供老师发送 APP 推送',
                    '学生端：删除订单',
                    'POST /thirdparty/service_order/item/abort',
                    '参数：',
                    'id: number - 服务订单 ID abortReason: string - 删除原因',
                    '注：',
                    '需要设置 abortTime 删除订单时，如果相关预约的状态为未联系，则同时取消预约 需要给老师推送',
                    '学生端：预约详情中增加方案信息',
                    'interface AppointmentItem { // ... plan: { id: number; name: string; coverTag: string; marketTags: string[]; coverUrl: string; hasVideo: boolean; }; // ... }',
                    '学生端：发起预约时增加方案 ID 参数',
                    '参数：',
                    'planId: number - 方案 ID',
                    '注意：',
                    '当发起咨询时带有 planId 时 需要验证方案是否上线 创建咨询的同时，创建一个服务订单',
                    '管理端：订单列表',
                    'GET /thirdparty/service_order/list/admin',
                    '注：',
                    '获取老师选项数据的接口增加 hasServiceOrder 参数，用于只获取有订单的老师',
                    '参数：',
                    'status: number - 按订单状态筛选 consultantId: number - 按服务老师筛选 createdAfter: Date - 按创建时间筛选 createdBefore: Date - 按创建时间筛选',
                    '响应：',
                    'interface Response { code: 0; data: { pagination: { page: number; pageSize: number; count: number; }; data: [ { id: number; status: number; user: { id: number; name: string; avatar: string; }; consultant: { id: number; realName: string; avatar: string; }; planSnapshot: { id: number; name: string; coverUrl: string; }; createTime: Date; adminNote: string; appointmentId: number; appointmentReviewText: string; appointTime: Date; submitTime: Date; confirmTime: Date; completeTime: Date; revokeTime: Date; abortTime: Date; } ]; }; }',
                    '管理端：撤销订单',
                    'POST /thirdparty/service_order/item/revoke',
                    '参数：',
                    'id: number - 服务订单 ID',
                    '注：',
                    '只能在 SUBMITTED / SERVING 状态中操作 需要设置 revokeTime 需要给学生/老师推送',
                    '管理端：恢复订单',
                    'POST /thirdparty/service_order/item/revoke/revert',
                    '参数：',
                    'id: number - 服务订单 ID',
                    '注：',
                    '只能在 REVOKED 状态下操作 将状态设为 SUBMITTED 清除 revokeTime, confirmTime 重新设置 submitTime 需要给学生/老师推送',
                    '管理端：编辑管理备注',
                    'PUT /thirdparty/service_order/item/admin_note',
                    '参数：',
                    'id: number - 服务订单 ID adminNote: string - 管理备注内容',
                  ],
                },
                {
                  link:
                    '/articles/drafts/service_order.md#我的学生（互动）设计',
                  title: '我的学生（互动）设计',
                  content: [
                    '我的学生基本设计',
                    '新增概念：互动（interaction），表示教师与学生 1:1 的关系。',
                    '一个互动包括：',
                    '相关学生一名 相关教师一名 初次互动时间（仅在创建时计算即可） 最新互动时间 互动 问答：分配给我的 + 我回答过的 追问：追问我的 预约：预约我的 订单：关于我的套餐的 待处理状态（布尔值，有任何未处理预约、分配未回答问题、未处理预约） 服务中状态（布尔值，有任何已下单未结束服务订单）',
                    '状态更新逻辑：',
                    '更新待处理状态、最新互动时间、互动项目的 ID 数组 产生新的追问时 分配新的问题时 发起新的预约时 老师回答问题/追问时 老师修改预约状态时 每 5 分钟刷新一次活跃的（最新互动时间在 15 分钟内的） 每 1 小时刷新一次非活跃的（最新时间在 15 分钟外的，包括尚未创建条目的） 更新服务订单状态 用户确认下单时，设为服务中 服务订单状态改变时，刷新服务中状态 每 5 分钟刷新一次活跃数据的待处理状态 每 1 小时刷新一次非活跃数据的待处理状态',
                    '我的学生表结构设计',
                    'interface ThirdPartyInteraction { id: integer.autoIncrement.primaryKey; userId: integer.notNull; consultantId: integer.notNull; createTime: timestamptz.notNull.default<"now">; // 最新互动时间 updateTime: timestamptz.notNull.default<"now">; // 是否待处理 isPending: boolean.notNull.default<false>; // 是否服务中 isServing: boolean.notNull.default<false>; // 问题ID数组 questionIds: integer[].notNull.default<[]>; // 追问ID数组 subQuestionIds: integer[].notNull.default<[]>; // 预约ID数组 appointmentIds: integer[].notNull.default<[]>; // 服务订单数组 serviceOrderIds: integer[].notNull.default<[]>; // 有未处理的问题 hasPendingQuestions: boolean.notNull.default<false>; // 有未处理的追问 hasPendingSubQuestions: boolean.notNull.default<false>; // 沟通备忘录 contactNote: string; }',
                    '我的学生接口设计',
                    '我的学生：待处理列表',
                    'GET /thirdparty/interaction/list/pending',
                    '参数：',
                    'page: number pageSize: number',
                    '响应：',
                    'interface Response { code: 0; data: { pagination: { page: number; pageSize: number; count: number; }; meta: { totalPendingCount: number; }; data: [ { id: number; // 互动ID（不需要用） user: { id: number; name: string; avatar: string; }; hasPendingQuestions: boolean; // 有追问未处理 hasPendingSubQuestions: boolean; // 有问题未处理 appointments: [ { id: number; // 预约ID appointmentTime: Date; // 预约时间 appointmentTimeText: string; // 预约时间（文本表示） consultantRead: boolean; // 老师已读 isPlanRelated: boolean; // 和方案相关 } ]; hasPlanRelatedAppointments: boolean; // 是否有方案相关的预约 hasUnreadAppointments: boolean; // 是否有未读的预约 } ]; }; }',
                    '我的学生：服务中列表',
                    'GET /thirdparty/interaction/list/serving',
                    '参数：',
                    'page: number pageSize: number',
                    '响应：',
                    'interface Response { code: 0; data: { pagination: { page: number; pageSize: number; count: number; }; meta: { totalPendingCount: number; }; data: [ { id: number; // 互动ID（不需要用） user: { id: number; name: string; avatar: string; }; serviceOrders: [ { id: number; // 服务订单ID status: number; statusText: string; planSnapshot: { // 方案 id: number; name: string; coverUrl: string; }; } ]; } ]; }; }',
                    '我的学生：全部列表',
                    'GET /thirdparty/interaction/list/all',
                    '参数：',
                    'page: number pageSize: number',
                    '响应：',
                    'interface Response { code: 0; data: { pagination: { page: number; pageSize: number; count: number; }; meta: { totalPendingCount: number; }; data: [ { id: number; // 互动ID（不需要用） user: { id: number; name: string; avatar: string; }; appointmentCount: number; questionCount: number; subQuestionCount: number; serviceOrderCount: number; } ]; }; }',
                    '我的学生：互动详情（互动记录、服务等）',
                    'GET /thirdparty/interaction/user',
                    '参数：',
                    'userId: number - 用户 ID',
                    '响应：',
                    'interface Response { code: 0; data: { user: { id: number; name: string; avatar: string; }; appointments: [ { id: number; // 预约ID appointmentTime: Date; // 预约时间 appointmentTimeText: string; // 预约时间（文本表示） consultantRead: boolean; // 老师已读 isPlanRelated: boolean; // 和方案相关 status: number; // 预约状态 } ]; questions: [ { id: number; // 问题ID content: string; // 问题内容 createTime: Date; // 提问时间 createTimeText: string; // 提问时间（文本表示） // 下面五个用于展示标签 locationProvince: string; locationCity: string; schoolName: string; targetCountryName: string; targetDegreeName: string; subQuestionCount: number; } ]; serviceOrders: [ { id: number; typeName: string; status: number; statusText: string; isActive: boolean; // 是否有效（用于区分已失效） planSnapshot: { // 方案 id: number; name: string; coverUrl: string; }; lastActionTime: string; // 最后操作的时间，如「预约时间：2018-04-26 12:12」 } ]; userData: { // 用户画像，和预约里面一样 // ... }; contactNote: string; // 沟通备忘录 }; }',
                    '我的学生：确认订单',
                    'POST /thirdparty/service_order/confirm',
                    '参数：',
                    'id: number - 服务订单 ID',
                    '注：',
                    '只能在待确认状态操作 需要设置 confirmTime 需要给老师推送',
                    '我的学生：结束服务',
                    'POST /thirdparty/service_order/complete',
                    '参数：',
                    'id: number - 服务订单 ID',
                    '注：',
                    '只能在服务中状态操作 需要设置 completeTime 需要给老师推送',
                    '我的学生：编辑沟通备忘录',
                    'PUT /thirdparty/interaction/user/contact_note',
                    '参数：',
                    'userId: number - 用户 ID contactNote: number - 沟通备忘录内容',
                  ],
                },
              ],
            },
            {
              link: '/articles/drafts/service_plan.md',
              title: '服务方案与服务故事',
              content: [
                '服务方案与服务故事 和之前版本相比的改动 模型设计 状态设计 方案状态 故事状态 接口设计 客户端接口 获取方案分类 获取方案列表 获取方案详情 获取大牛列表 获取故事列表 获取故事详情 增加故事分享计数 管理端接口 后台获取方案列表 后台获取方案详情 后台获取大牛列表 调整方案顺序 创建方案 更新方案 上下线方案 删除方案 获取方案关联的院校列表 修改院校关联的方案列表 后台获取故事列表 后台获取故事详情 隐藏/取消隐藏方案故事 获取故事选项数据 获取故事表单 创建故事 更新故事',
              ],
              markdown:
                '# 服务方案与服务故事\n\n- [服务方案与服务故事](#服务方案与服务故事)\n  - [和之前版本相比的改动](#和之前版本相比的改动)\n  - [模型设计](#模型设计)\n    - [状态设计](#状态设计)\n      - [方案状态](#方案状态)\n      - [故事状态](#故事状态)\n  - [接口设计](#接口设计)\n    - [客户端接口](#客户端接口)\n      - [获取方案分类](#获取方案分类)\n      - [获取方案列表](#获取方案列表)\n      - [获取方案详情](#获取方案详情)\n      - [获取大牛列表](#获取大牛列表)\n      - [获取故事列表](#获取故事列表)\n      - [获取故事详情](#获取故事详情)\n      - [增加故事分享计数](#增加故事分享计数)\n    - [管理端接口](#管理端接口)\n      - [后台获取方案列表](#后台获取方案列表)\n      - [后台获取方案详情](#后台获取方案详情)\n      - [后台获取大牛列表](#后台获取大牛列表)\n      - [调整方案顺序](#调整方案顺序)\n      - [创建方案](#创建方案)\n      - [更新方案](#更新方案)\n      - [上下线方案](#上下线方案)\n      - [删除方案](#删除方案)\n      - [获取方案关联的院校列表](#获取方案关联的院校列表)\n      - [修改院校关联的方案列表](#修改院校关联的方案列表)\n      - [后台获取故事列表](#后台获取故事列表)\n      - [后台获取故事详情](#后台获取故事详情)\n      - [隐藏/取消隐藏方案故事](#隐藏取消隐藏方案故事)\n      - [获取故事选项数据](#获取故事选项数据)\n      - [获取故事表单](#获取故事表单)\n      - [创建故事](#创建故事)\n      - [更新故事](#更新故事)\n\n## 和之前版本相比的改动\n\n- 方案与故事所有接口的路径发生了变化\n- 原方案（plan）和套餐（plan set）合并为服务方案（service plan）\n- 原方案故事重构为服务故事（只是修改了方案的关联关系）\n\n## 模型设计\n\n### 状态设计\n\n#### 方案状态\n\n```mermaid\nstateDiagram\n  ENABLED: 上架状态\n  DISABLED: 下架状态*[3]\n  DELETED: 删除状态*[4]\n\n  [*] --> DISABLED: 创建\n\n  DISABLED --> ENABLED: 上架\n  ENABLED --> DISABLED: 下架*[1]\n\n  DISABLED --> DELETED: 删除*[2]\n  ENABLED --> DELETED: 删除*[2]\n```\n\n- 注 1：下架方案时，如果该教师将没有上架的方案时，将教师的大牛状态也设置为下架\n- 注 2：删除方案时，同时会删除关联的故事\n- 注 3：下架状态的方案在客户端不可见，在后台可见\n- 注 4：删除状态的方案在客户端和后台均不可见\n\n#### 故事状态\n\n```mermaid\nstateDiagram\n  ENABLED: 展示状态\n  DISABLED: 隐藏状态*[1]\n  DELETED: 删除状态*[2]\n\n  [*] --> DISABLED: 创建\n\n  DISABLED --> ENABLED: 取消隐藏\n  ENABLED --> DISABLED: 隐藏\n\n  DISABLED --> DELETED: 删除相关方案\n  ENABLED --> DELETED: 删除相关方案\n```\n\n- 注 1：隐藏状态的方案在客户端不可见，在后台可见\n- 注 2：删除状态的方案在客户端和后台均不可见\n\n## 接口设计\n\n### 客户端接口\n\n#### 获取方案分类\n\n```http\nGET /thirdparty/service/plan/types\n```\n\n```ts\ninterface Response {\n  code: 0;\n  data: [\n    {\n      // 方案分类\n      id: number;\n      name: string;\n      data: {\n        // hot标记\n        hot: boolean;\n      };\n      // 筛选项\n      subtypes: [\n        {\n          // 筛选项类型\n          id: string; // 例如：region\n          name: string; // 例如：国家\n          options: [\n            // 筛选项数据\n            {\n              id: number;\n              name: string;\n            }\n          ];\n        }\n      ];\n    }\n  ];\n}\n```\n\n#### 获取方案列表\n\n```http\nGET /thirdparty/service/plan/list\n```\n\n参数：\n\n- **typeId**: _number_ 分类 ID\n- **subtypeIds**: _number[]_ 小类筛选\n- **page**: _number_\n- **pageSize**: _number_\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    pagination: {\n      page: number;\n      pageSize: number;\n      count: number;\n    };\n    data: [\n      // 方案数组\n      {\n        id: number;\n        name: string;\n        coverTag: string; // 封面营销词\n        marketTags: string[]; // 营销TAGS\n        coverUrl: url;\n        hasVideo: boolean; // 有视频介绍\n      }\n    ];\n  };\n}\n```\n\n#### 获取方案详情\n\n```http\nGET /thirdparty/service/plan/item\n```\n\n参数：\n\n- **id**: _number_ 方案 ID\n\n```ts\ninterface Params {\n  id: number;\n  name: string;\n  coverTag: string; // 封面营销词\n  marketTags: string[]; // 营销TAGS\n  coverUrl: string;\n  videoUrl?: string;\n  videoThumbnailUrl?: string;\n  videoWidth?: number;\n  videoHeight?: number;\n  consultant: {\n    id: number;\n    realName: string;\n    avatar: string;\n    province: string;\n    city: string;\n    marketTags: string[];\n    appointmentEnabled: boolean;\n    adeptServiceCategoriesText: string;\n  };\n  // 多张图片组成长图\n  description: [{ url: string; width: number; height: number }];\n  // 多张图片组成长图\n  procedure: [{ url: string; width: number; height: number }];\n  // 多张图片组成长图\n  feesDescription: [{ url: string; width: number; height: number }];\n  stories: [\n    {\n      id: number;\n      title: string;\n      userIsAnonymous: boolean;\n      userName: string;\n      userAvatar: string;\n      likeCount: number;\n      coverUrl: string;\n      coverWidth: number;\n      coverHeight: number;\n      coverColor: string;\n      typeName: string;\n    }\n  ];\n  userTodayRemainingCount: number; // 当前用户今日剩余预约次数\n}\n```\n\n#### 获取大牛列表\n\n```http\nGET /thirdparty/service/plan/consultant/list\n```\n\n参数：\n\n- **page**: _number_\n- **pageSize**: _number_\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    pagination: {\n      page: number;\n      pageSize: number;\n      count: number;\n    };\n    data: [\n      // 导师数组\n      {\n        id: number;\n        realName: string;\n        avatar: url;\n        province: string;\n        city: string;\n        adeptServiceCategoriesText: string;\n        marketTags: string[];\n        plans: [\n          {\n            // 组合了方案与该教师提供的套餐\n            id: number; // 方案ID\n            name: string; // 方案名\n            coverTag: string; // 方案封面营销词\n            coverUrl: url; // 套餐封面\n          }\n        ];\n      }\n    ];\n  };\n}\n```\n\n#### 获取故事列表\n\n```http\nGET /thirdparty/service/story/list\n```\n\n参数：\n\n- **planId**: _number_ 可选参数，方案 ID（不是套餐 ID）\n- **page**: _number_\n- **pageSize**: _number_\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    pagination: {\n      count: number;\n      page: number;\n      pageSize: number;\n    };\n    data: [\n      {\n        id: number;\n        typeName: string;\n        title: string | null;\n        userIsAnonymous: boolean;\n        userName: string | null;\n        userAvatar: string | null;\n        likeCount: number; // 这里需要加上一个基数\n        coverUrl: string;\n        coverWidth: number;\n        coverHeight: number;\n        coverColor: string;\n      }\n    ];\n  };\n}\n```\n\n#### 获取故事详情\n\n```http\nGET /thirdparty/service/story/item\n```\n\n参数：\n\n- **id**: _number_ - 故事 id\n- **silent**: _boolean_ - 此次获取不计入查看次数，一般不要传\n- **showHidden**: _boolean_ - 允许获取隐藏的故事，一般不要传\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    id: number;\n    typeName: string;\n    title: string | null;\n    userIsAnonymous: boolean;\n    userName: string | null;\n    userAvatar: string | null;\n    visitCount: number; // 需要加上一个基数\n    likeCount: number; // 需要加上一个基数\n    collectCount: number; // 需要加上一个基数\n    shareCount: number; // 需要加上一个基数\n    serviceStatusText: string;\n    userStatusText: string;\n    coverUrl: string;\n    coverWidth: string;\n    coverHeight: string;\n    videoUrl: string;\n    videoThumbnailUrl: string;\n    images: [{ url: string; text: string }];\n    consultant: {\n      id: number;\n      realName: string;\n      avatar: string;\n      city: string;\n      tags: [{ name: string; color: string }];\n    };\n    plan: {\n      id: number;\n      name: string;\n      coverTag: string;\n      marketTags: string[];\n      coverUrl: string;\n      hasVideo: boolean;\n    };\n    relatedStories: [\n      {\n        id: number;\n        typeName: string;\n        title: string | null;\n        userIsAnonymous: boolean;\n        userName: string | null;\n        userAvatar: string | null;\n        likeCount: number; // 这里需要加上一个基数\n        coverUrl: string;\n        coverWidth: number;\n        coverHeight: number;\n        coverColor: string;\n      }\n    ];\n\n    // 下面的字段都是动态表单的内容\n    target: [\n      // 目标（字段版）\n      { name: string; value: string }\n    ];\n    // 目标（文本版）\n    targetText: string;\n    background: [\n      // 背景信息\n      { name: string; value: string }\n    ];\n    offers: [\n      // 所获结果（Offer版）\n      {\n        offerSchool: {\n          id: number;\n          chineseName: string;\n          englishName: string;\n          logo: string;\n        };\n        offerMajor: string;\n        offerDegree: string;\n        offerYear: string;\n        offerDescription: string;\n      }\n    ];\n    resultText: string; // 所获结果（文本版）\n    storyText: string; // 我的故事\n    analysisText: string; // 深度分析\n  };\n}\n```\n\n#### 增加故事分享计数\n\n```http\nPOST /thirdparty/service/story/share\n```\n\n参数：\n\n- **id**: _number_ - 故事 id\n\n### 管理端接口\n\n#### 后台获取方案列表\n\n```http\nGET /thirdparty/service/plan/list/admin\n```\n\n参数：\n\n- **typeId**: _number_ - 分类 ID，参考[获取方案分类接口](#获取方案分类)\n- **page**: _number_\n- **pageSize**: _number_\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    pagination: {\n      page: number;\n      pageSize: number;\n      count: number;\n    };\n    data: [\n      // 方案数组\n      {\n        id: number;\n        typeId: number;\n        typeName: string;\n        subtypeIds: number[];\n        subtype: {\n          region: { id; name }; // 对象的key为子类型的id\n          degree: { id; name };\n        };\n        order: number;\n        name: string;\n        coverTag: string; // 封面营销词\n        marketTags: string[]; // 营销TAGS\n        consultant: { id: number; realName: string; avatar: string };\n        coverUrl: string;\n        videoUrl: string;\n        videoThumbnailUrl: string;\n        videoWidth: number;\n        videoHeight: height;\n        description: [{ url: string; width: number; height: number }]; // 多张图片组成长图\n        procedure: [{ url: string; width: number; height: number }]; // 多张图片组成长图\n        feesDescription: [{ url: string; width: number; height: number }]; // 多张图片组成长图\n        enabled: boolean; // 是否上线\n        adminData: any;\n      }\n    ];\n  };\n}\n```\n\n#### 后台获取方案详情\n\n```http\nGET /thirdparty/service/plan/item/admin\n```\n\n参数：\n\n- **id**: _number_\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    id: number;\n    typeId: number;\n    subtypeIds: number[];\n    order: number;\n    name: string;\n    coverTag: string;\n    marketTags: string[];\n    adminData: any;\n    coverUrl: string;\n    videoUrl: string;\n    videoWidth: number;\n    videoHeight: number;\n    videoThumbnailUrl: string;\n    description: [{ url: string; width: number; height: number }];\n    procedure: [{ url: string; width: number; height: number }];\n    feesDescription: [{ url: string; width: number; height: number }];\n    enabled: true;\n    deleted: false;\n    consultant: { id: number; realName: string; avatar: string };\n    subtype: {\n      [key: string]: { id: number; name: string };\n    };\n  };\n}\n```\n\n#### 后台获取大牛列表\n\n```http\nGET /thirdparty/service/plan/consultants/admin\n```\n\n参数：\n\n- **page**: _number_\n- **pageSize**: _number_\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    pagination: {\n      page: number;\n      pageSize: number;\n      count: number;\n    };\n    data: [\n      {\n        id: number;\n        realName: string;\n        avatar: string;\n        marketOrder: number;\n        marketTags: string[];\n        marketEnabled: boolean;\n        enabled: boolean;\n        appointmentEnabled: boolean;\n        plans: [\n          {\n            id: number;\n            name: string;\n            coverUrl: string;\n            marketTags: string[];\n          }\n        ];\n        isDisplayed: boolean;\n      }\n    ];\n  };\n}\n```\n\n#### 调整方案顺序\n\n```http\nPOST /thirdparty/service/plan/move\n```\n\n参数：\n\n- **id**: _number_ - 方案 id\n- **direction**: _string_ - `"up" | "down"` 移动方向\n\n#### 创建方案\n\n```http\nPOST /thirdparty/service/plan/item\n```\n\n参数：\n\n```ts\ninterface Params {\n  typeId: number;\n  subtypeIds: number[];\n  name: string;\n  coverTag: string;\n  marketTags: string[];\n  coverUrl: string; // 封面图，提交时先上传封面再调用创建接口\n  videoUrl: string; // 视频，只能上传 MP4，提交时先上传视频再调用创建接口\n  videoThumbnailUrl: string;\n  videoWidth: number;\n  videoHeight: number;\n  consultantId: number;\n  description: { url: string; height: number; width: number }[]; // 由一个长图切出来的多个短图，提交时先上传好再调用创建接口\n  procedure: { url: string; height: number; width: number }[]; // 由一个长图切出来的多个短图，提交时先上传好再调用创建接口\n  feesDescription: { url: string; height: number; width: number }[]; // 由一个长图切出来的多个短图，提交时先上传好再调用创建接口\n  adminData: json;\n}\n```\n\n#### 更新方案\n\n```http\nPUT /thirdparty/service/plan/item\n```\n\n参数：\n\n```ts\ninterface Params {\n  id: number;\n  subtypeIds: number[];\n  name: string;\n  coverTag: string;\n  marketTags: string[];\n  coverUrl: string; // 封面图，提交时先上传封面再调用创建接口\n  videoUrl: string; // 视频，只能上传 MP4，提交时先上传视频再调用创建接口\n  videoThumbnailUrl: string;\n  videoWidth: number;\n  videoHeight: number;\n  consultantId: number;\n  description: { url: string; height: number; width: number }[]; // 由一个长图切出来的多个短图，提交时先上传好再调用创建接口\n  procedure: { url: string; height: number; width: number }[]; // 由一个长图切出来的多个短图，提交时先上传好再调用创建接口\n  feesDescription: { url: string; height: number; width: number }[]; // 由一个长图切出来的多个短图，提交时先上传好再调用创建接口\n  adminData: json;\n}\n```\n\n#### 上下线方案\n\n```http\nPUT /thirdparty/service/plan/item/enabled\n```\n\n参数：\n\n- **id**: _number_\n- **enabled**: _boolean_\n\n#### 删除方案\n\n```http\nDELETE /thirdparty/service/plan/item\n```\n\n参数：\n\n- **id**: _number_\n\n#### 获取方案关联的院校列表\n\n```http\nGET /thirdparty/service/plan/school/list\n```\n\n参数：\n\n- **keyword**: _string_ - 关键字搜索\n- **countryId**: _string_ - 国家 ID\n- **page**: _number_\n- **pageSize**: _number_\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    pagination: {\n      count: number;\n      page: number;\n      pageSize: number;\n    };\n    data: [\n      {\n        id: number;\n        chineseName: string;\n        englishName: string;\n        logo: string;\n        plans: [{ id: number; name: string }];\n      }\n    ];\n  };\n}\n```\n\n#### 修改院校关联的方案列表\n\n```http\nPOST /thirdparty/service/plan/school/relations\n```\n\n参数：\n\n- **schoolId**: _number_ - 学校 id\n- **planIds**: _number[]_ - 方案数组\n\n#### 后台获取故事列表\n\n```http\nGET /thirdparty/service/story/list/admin\n```\n\n参数：\n\n- **consultantId**: _number_ - 可选参数，教师 ID\n- **page**: _number_\n- **pageSize**: _number_\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    pagination: {\n      count: number;\n      page: number;\n      pageSize: number;\n    };\n    data: [\n      {\n        id: number;\n        title: string;\n        enabled: boolean;\n        userIsAnonymous: boolean;\n        userName: string;\n        userAvatar: string;\n        visitCount: number;\n        likeCount: number;\n        collectCount: number;\n        shareCount: number;\n        quality: number;\n        coverUrl: string;\n        coverWidth: number;\n        coverHeight: number;\n        plan: {\n          id: number;\n          name: string;\n          deleted: boolean;\n          enabled: boolean;\n        };\n        consultant: {\n          id: number;\n          realName: string;\n        };\n        typeName: string;\n        serviceStatusText: string;\n      },\n  };\n}\n```\n\n#### 后台获取故事详情\n\n```http\nGET /thirdparty/service/story/item/admin\n```\n\n参数：\n\n- **id**: _number_\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    id: number;\n    typeId: number;\n    planId: number;\n    title: string;\n    userIsAnonymous: boolean;\n    userName: string;\n    userAvatar: string;\n    serviceStatus: string;\n    videoUrl: string;\n    videoThumbnailUrl: string;\n    images: [{ url: string; text: string }];\n    userStatusText: string;\n    formData: object;\n  };\n}\n```\n\n#### 隐藏/取消隐藏方案故事\n\n```http\nPOST /thirdparty/service/story/item/enabled\n```\n\n参数：\n\n- **id**: _number_\n- **enabled**: _boolean_\n\n#### 获取故事选项数据\n\n```http\nGET /thirdparty/service/story/options\n```\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    type: [{ id: number; name: string }];\n    serviceStatus: [{ id: number; name: string }];\n  };\n}\n```\n\n#### 获取故事表单\n\n```http\nGET /thirdparty/service/story/form\n```\n\n参数：\n\n- **typeId**: _number_\n\n```ts\ninterface Response {\n  code: 0;\n  data: {\n    blocks: [\n      {\n        key: string;\n        name: string;\n        type: "object" | "array" | "text";\n        inputs?: [\n          {\n            key: string;\n            name: string;\n            type:\n              | "select"\n              | "checkbox"\n              | "text"\n              | "textarea"\n              | "school"\n              | "major";\n            options?:\n              | [{ id: number; name: string }]\n              | [{ id: string; name: string }];\n          }\n        ];\n      }\n    ];\n  };\n}\n```\n\n#### 创建故事\n\n```http\nPOST /thirdparty/service/story/item\n```\n\n```ts\ninterface Params {\n  planId: number;\n  title: string; \n  userIsAnonymous: boolean;\n  userName: string; \n  userAvatar: string; \n  serviceStatus: number;\n  coverUrl: string;\n  coverWidth: number;\n  coverHeight: number;\n  videoUrl: string; // videoUrl 和 images 只能有一个\n  videoThumbnailUrl: string;\n  images: { url: string; text: string }[];\n  userStatusText: string;\n  formData: string; // json字符串\n}\n```\n\n#### 更新故事\n\n```http\nPUT /thirdparty/service/story/item\n```\n\n```ts\ninterface Params {\n  id: number;\n  title: string; \n  userIsAnonymous: boolean;\n  userName: string; \n  userAvatar: string; \n  serviceStatus: number;\n  coverUrl: string;\n  coverWidth: number;\n  coverHeight: number;\n  videoUrl: string; // videoUrl 和 images 只能有一个\n  videoThumbnailUrl: string;\n  images: { url: string; text: string }[];\n  userStatusText: string;\n  formData: string; // json字符串\n}\n```\n',
              children: [
                {
                  link: '/articles/drafts/service_plan.md#和之前版本相比的改动',
                  title: '和之前版本相比的改动',
                  content: [
                    '方案与故事所有接口的路径发生了变化 原方案（plan）和套餐（plan set）合并为服务方案（service plan） 原方案故事重构为服务故事（只是修改了方案的关联关系）',
                  ],
                },
                {
                  link: '/articles/drafts/service_plan.md#模型设计',
                  title: '模型设计',
                  content: [
                    '状态设计',
                    '方案状态',
                    'stateDiagram ENABLED: 上架状态 DISABLED: 下架状态*[3] DELETED: 删除状态*[4] [*] --> DISABLED: 创建 DISABLED --> ENABLED: 上架 ENABLED --> DISABLED: 下架*[1] DISABLED --> DELETED: 删除*[2] ENABLED --> DELETED: 删除*[2]',
                    '注 1：下架方案时，如果该教师将没有上架的方案时，将教师的大牛状态也设置为下架 注 2：删除方案时，同时会删除关联的故事 注 3：下架状态的方案在客户端不可见，在后台可见 注 4：删除状态的方案在客户端和后台均不可见',
                    '故事状态',
                    'stateDiagram ENABLED: 展示状态 DISABLED: 隐藏状态*[1] DELETED: 删除状态*[2] [*] --> DISABLED: 创建 DISABLED --> ENABLED: 取消隐藏 ENABLED --> DISABLED: 隐藏 DISABLED --> DELETED: 删除相关方案 ENABLED --> DELETED: 删除相关方案',
                    '注 1：隐藏状态的方案在客户端不可见，在后台可见 注 2：删除状态的方案在客户端和后台均不可见',
                  ],
                },
                {
                  link: '/articles/drafts/service_plan.md#接口设计',
                  title: '接口设计',
                  content: [
                    '客户端接口',
                    '获取方案分类',
                    'GET /thirdparty/service/plan/types',
                    'interface Response { code: 0; data: [ { // 方案分类 id: number; name: string; data: { // hot标记 hot: boolean; }; // 筛选项 subtypes: [ { // 筛选项类型 id: string; // 例如：region name: string; // 例如：国家 options: [ // 筛选项数据 { id: number; name: string; } ]; } ]; } ]; }',
                    '获取方案列表',
                    'GET /thirdparty/service/plan/list',
                    '参数：',
                    'typeId: number 分类 ID subtypeIds: number[] 小类筛选 page: number pageSize: number',
                    'interface Response { code: 0; data: { pagination: { page: number; pageSize: number; count: number; }; data: [ // 方案数组 { id: number; name: string; coverTag: string; // 封面营销词 marketTags: string[]; // 营销TAGS coverUrl: url; hasVideo: boolean; // 有视频介绍 } ]; }; }',
                    '获取方案详情',
                    'GET /thirdparty/service/plan/item',
                    '参数：',
                    'id: number 方案 ID',
                    'interface Params { id: number; name: string; coverTag: string; // 封面营销词 marketTags: string[]; // 营销TAGS coverUrl: string; videoUrl?: string; videoThumbnailUrl?: string; videoWidth?: number; videoHeight?: number; consultant: { id: number; realName: string; avatar: string; province: string; city: string; marketTags: string[]; appointmentEnabled: boolean; adeptServiceCategoriesText: string; }; // 多张图片组成长图 description: [{ url: string; width: number; height: number }]; // 多张图片组成长图 procedure: [{ url: string; width: number; height: number }]; // 多张图片组成长图 feesDescription: [{ url: string; width: number; height: number }]; stories: [ { id: number; title: string; userIsAnonymous: boolean; userName: string; userAvatar: string; likeCount: number; coverUrl: string; coverWidth: number; coverHeight: number; coverColor: string; typeName: string; } ]; userTodayRemainingCount: number; // 当前用户今日剩余预约次数 }',
                    '获取大牛列表',
                    'GET /thirdparty/service/plan/consultant/list',
                    '参数：',
                    'page: number pageSize: number',
                    'interface Response { code: 0; data: { pagination: { page: number; pageSize: number; count: number; }; data: [ // 导师数组 { id: number; realName: string; avatar: url; province: string; city: string; adeptServiceCategoriesText: string; marketTags: string[]; plans: [ { // 组合了方案与该教师提供的套餐 id: number; // 方案ID name: string; // 方案名 coverTag: string; // 方案封面营销词 coverUrl: url; // 套餐封面 } ]; } ]; }; }',
                    '获取故事列表',
                    'GET /thirdparty/service/story/list',
                    '参数：',
                    'planId: number 可选参数，方案 ID（不是套餐 ID） page: number pageSize: number',
                    'interface Response { code: 0; data: { pagination: { count: number; page: number; pageSize: number; }; data: [ { id: number; typeName: string; title: string | null; userIsAnonymous: boolean; userName: string | null; userAvatar: string | null; likeCount: number; // 这里需要加上一个基数 coverUrl: string; coverWidth: number; coverHeight: number; coverColor: string; } ]; }; }',
                    '获取故事详情',
                    'GET /thirdparty/service/story/item',
                    '参数：',
                    'id: number - 故事 id silent: boolean - 此次获取不计入查看次数，一般不要传 showHidden: boolean - 允许获取隐藏的故事，一般不要传',
                    'interface Response { code: 0; data: { id: number; typeName: string; title: string | null; userIsAnonymous: boolean; userName: string | null; userAvatar: string | null; visitCount: number; // 需要加上一个基数 likeCount: number; // 需要加上一个基数 collectCount: number; // 需要加上一个基数 shareCount: number; // 需要加上一个基数 serviceStatusText: string; userStatusText: string; coverUrl: string; coverWidth: string; coverHeight: string; videoUrl: string; videoThumbnailUrl: string; images: [{ url: string; text: string }]; consultant: { id: number; realName: string; avatar: string; city: string; tags: [{ name: string; color: string }]; }; plan: { id: number; name: string; coverTag: string; marketTags: string[]; coverUrl: string; hasVideo: boolean; }; relatedStories: [ { id: number; typeName: string; title: string | null; userIsAnonymous: boolean; userName: string | null; userAvatar: string | null; likeCount: number; // 这里需要加上一个基数 coverUrl: string; coverWidth: number; coverHeight: number; coverColor: string; } ]; // 下面的字段都是动态表单的内容 target: [ // 目标（字段版） { name: string; value: string } ]; // 目标（文本版） targetText: string; background: [ // 背景信息 { name: string; value: string } ]; offers: [ // 所获结果（Offer版） { offerSchool: { id: number; chineseName: string; englishName: string; logo: string; }; offerMajor: string; offerDegree: string; offerYear: string; offerDescription: string; } ]; resultText: string; // 所获结果（文本版） storyText: string; // 我的故事 analysisText: string; // 深度分析 }; }',
                    '增加故事分享计数',
                    'POST /thirdparty/service/story/share',
                    '参数：',
                    'id: number - 故事 id',
                    '管理端接口',
                    '后台获取方案列表',
                    'GET /thirdparty/service/plan/list/admin',
                    '参数：',
                    'typeId: number - 分类 ID，参考获取方案分类接口 page: number pageSize: number',
                    'interface Response { code: 0; data: { pagination: { page: number; pageSize: number; count: number; }; data: [ // 方案数组 { id: number; typeId: number; typeName: string; subtypeIds: number[]; subtype: { region: { id; name }; // 对象的key为子类型的id degree: { id; name }; }; order: number; name: string; coverTag: string; // 封面营销词 marketTags: string[]; // 营销TAGS consultant: { id: number; realName: string; avatar: string }; coverUrl: string; videoUrl: string; videoThumbnailUrl: string; videoWidth: number; videoHeight: height; description: [{ url: string; width: number; height: number }]; // 多张图片组成长图 procedure: [{ url: string; width: number; height: number }]; // 多张图片组成长图 feesDescription: [{ url: string; width: number; height: number }]; // 多张图片组成长图 enabled: boolean; // 是否上线 adminData: any; } ]; }; }',
                    '后台获取方案详情',
                    'GET /thirdparty/service/plan/item/admin',
                    '参数：',
                    'id: number',
                    'interface Response { code: 0; data: { id: number; typeId: number; subtypeIds: number[]; order: number; name: string; coverTag: string; marketTags: string[]; adminData: any; coverUrl: string; videoUrl: string; videoWidth: number; videoHeight: number; videoThumbnailUrl: string; description: [{ url: string; width: number; height: number }]; procedure: [{ url: string; width: number; height: number }]; feesDescription: [{ url: string; width: number; height: number }]; enabled: true; deleted: false; consultant: { id: number; realName: string; avatar: string }; subtype: { [key: string]: { id: number; name: string }; }; }; }',
                    '后台获取大牛列表',
                    'GET /thirdparty/service/plan/consultants/admin',
                    '参数：',
                    'page: number pageSize: number',
                    'interface Response { code: 0; data: { pagination: { page: number; pageSize: number; count: number; }; data: [ { id: number; realName: string; avatar: string; marketOrder: number; marketTags: string[]; marketEnabled: boolean; enabled: boolean; appointmentEnabled: boolean; plans: [ { id: number; name: string; coverUrl: string; marketTags: string[]; } ]; isDisplayed: boolean; } ]; }; }',
                    '调整方案顺序',
                    'POST /thirdparty/service/plan/move',
                    '参数：',
                    'id: number - 方案 id direction: string - "up" | "down" 移动方向',
                    '创建方案',
                    'POST /thirdparty/service/plan/item',
                    '参数：',
                    'interface Params { typeId: number; subtypeIds: number[]; name: string; coverTag: string; marketTags: string[]; coverUrl: string; // 封面图，提交时先上传封面再调用创建接口 videoUrl: string; // 视频，只能上传 MP4，提交时先上传视频再调用创建接口 videoThumbnailUrl: string; videoWidth: number; videoHeight: number; consultantId: number; description: { url: string; height: number; width: number }[]; // 由一个长图切出来的多个短图，提交时先上传好再调用创建接口 procedure: { url: string; height: number; width: number }[]; // 由一个长图切出来的多个短图，提交时先上传好再调用创建接口 feesDescription: { url: string; height: number; width: number }[]; // 由一个长图切出来的多个短图，提交时先上传好再调用创建接口 adminData: json; }',
                    '更新方案',
                    'PUT /thirdparty/service/plan/item',
                    '参数：',
                    'interface Params { id: number; subtypeIds: number[]; name: string; coverTag: string; marketTags: string[]; coverUrl: string; // 封面图，提交时先上传封面再调用创建接口 videoUrl: string; // 视频，只能上传 MP4，提交时先上传视频再调用创建接口 videoThumbnailUrl: string; videoWidth: number; videoHeight: number; consultantId: number; description: { url: string; height: number; width: number }[]; // 由一个长图切出来的多个短图，提交时先上传好再调用创建接口 procedure: { url: string; height: number; width: number }[]; // 由一个长图切出来的多个短图，提交时先上传好再调用创建接口 feesDescription: { url: string; height: number; width: number }[]; // 由一个长图切出来的多个短图，提交时先上传好再调用创建接口 adminData: json; }',
                    '上下线方案',
                    'PUT /thirdparty/service/plan/item/enabled',
                    '参数：',
                    'id: number enabled: boolean',
                    '删除方案',
                    'DELETE /thirdparty/service/plan/item',
                    '参数：',
                    'id: number',
                    '获取方案关联的院校列表',
                    'GET /thirdparty/service/plan/school/list',
                    '参数：',
                    'keyword: string - 关键字搜索 countryId: string - 国家 ID page: number pageSize: number',
                    'interface Response { code: 0; data: { pagination: { count: number; page: number; pageSize: number; }; data: [ { id: number; chineseName: string; englishName: string; logo: string; plans: [{ id: number; name: string }]; } ]; }; }',
                    '修改院校关联的方案列表',
                    'POST /thirdparty/service/plan/school/relations',
                    '参数：',
                    'schoolId: number - 学校 id planIds: number[] - 方案数组',
                    '后台获取故事列表',
                    'GET /thirdparty/service/story/list/admin',
                    '参数：',
                    'consultantId: number - 可选参数，教师 ID page: number pageSize: number',
                    'interface Response { code: 0; data: { pagination: { count: number; page: number; pageSize: number; }; data: [ { id: number; title: string; enabled: boolean; userIsAnonymous: boolean; userName: string; userAvatar: string; visitCount: number; likeCount: number; collectCount: number; shareCount: number; quality: number; coverUrl: string; coverWidth: number; coverHeight: number; plan: { id: number; name: string; deleted: boolean; enabled: boolean; }; consultant: { id: number; realName: string; }; typeName: string; serviceStatusText: string; }, }; }',
                    '后台获取故事详情',
                    'GET /thirdparty/service/story/item/admin',
                    '参数：',
                    'id: number',
                    'interface Response { code: 0; data: { id: number; typeId: number; planId: number; title: string; userIsAnonymous: boolean; userName: string; userAvatar: string; serviceStatus: string; videoUrl: string; videoThumbnailUrl: string; images: [{ url: string; text: string }]; userStatusText: string; formData: object; }; }',
                    '隐藏/取消隐藏方案故事',
                    'POST /thirdparty/service/story/item/enabled',
                    '参数：',
                    'id: number enabled: boolean',
                    '获取故事选项数据',
                    'GET /thirdparty/service/story/options',
                    'interface Response { code: 0; data: { type: [{ id: number; name: string }]; serviceStatus: [{ id: number; name: string }]; }; }',
                    '获取故事表单',
                    'GET /thirdparty/service/story/form',
                    '参数：',
                    'typeId: number',
                    'interface Response { code: 0; data: { blocks: [ { key: string; name: string; type: "object" | "array" | "text"; inputs?: [ { key: string; name: string; type: | "select" | "checkbox" | "text" | "textarea" | "school" | "major"; options?: | [{ id: number; name: string }] | [{ id: string; name: string }]; } ]; } ]; }; }',
                    '创建故事',
                    'POST /thirdparty/service/story/item',
                    'interface Params { planId: number; title: string; userIsAnonymous: boolean; userName: string; userAvatar: string; serviceStatus: number; coverUrl: string; coverWidth: number; coverHeight: number; videoUrl: string; // videoUrl 和 images 只能有一个 videoThumbnailUrl: string; images: { url: string; text: string }[]; userStatusText: string; formData: string; // json字符串 }',
                    '更新故事',
                    'PUT /thirdparty/service/story/item',
                    'interface Params { id: number; title: string; userIsAnonymous: boolean; userName: string; userAvatar: string; serviceStatus: number; coverUrl: string; coverWidth: number; coverHeight: number; videoUrl: string; // videoUrl 和 images 只能有一个 videoThumbnailUrl: string; images: { url: string; text: string }[]; userStatusText: string; formData: string; // json字符串 }',
                  ],
                },
              ],
            },
          ],
        },
      ],
    };
  });
